vyatta-dataplane (3.13.47) unstable; urgency=medium

  [ Cian O'Sullivan ]
  * sfp-permit-list: Enforcement rework

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 24 Sep 2021 09:16:58 +0100

vyatta-dataplane (3.13.46) unstable; urgency=medium

  * Preserve dataplane ARP entry if h/w knows it's reachable

 -- Thomas Kiely <thomas.kiely@att.com>  Thu, 23 Sep 2021 08:18:27 +0100

vyatta-dataplane (3.13.45) unstable; urgency=medium

  [ Paul Aitken ]
  * codechecks: correct algorithm

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 31 Aug 2021 17:20:15 +0100

vyatta-dataplane (3.13.44) unstable; urgency=medium

  [ Paul Aitken ]
  * Add missing Copyright and SPDX-License-Identifier

  [ Gaurav Gehani ]
  * vyatta-dataplane: fix coverity errors

  [ Gavin Shearer ]
  * Fix issue of missing ndpi session info for NetFlow

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 31 Aug 2021 13:37:59 +0100

vyatta-dataplane (3.13.43) unstable; urgency=medium

  [ ck407g ]
  * Remove activation delay

  [ Paul Aitken ]
  * make vyatta-dataplane.postinst executable
  * codechecks: add file permissions checks
  * codechecks: better formatting

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 26 Aug 2021 10:07:17 +0100

vyatta-dataplane (3.13.42) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * pktmbuf: use nearest NUMA pool for control packets (Bugfix: VRVDR-55966)
  * Detect accelerated netvsc DPDK ports (Bugfix: VRVDR-55967)

  [ Daniel Gollub ]
  * shadow: apply crypto on all egress slow-path traffic
  * shadow: reduce the crypto lookup overhead
  * crypto: adjust L3 packet length for IPv4 slow-path traffic

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 24 Aug 2021 18:46:23 +0100

vyatta-dataplane (3.13.41) unstable; urgency=medium

  [ Paul Aitken ]
  * Fix idempotent headers
  * Fix idempotent headers
  * Fix idempotent headers
  * Fix idempotent headers
  * Jenkinsfile codechecks: don't abort

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 23 Aug 2021 13:55:39 +0100

vyatta-dataplane (3.13.40) unstable; urgency=medium

  [ kalaivani vinothkumar ]
  * coverity: SFP buffer not null terminated

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 20 Aug 2021 17:24:09 +0100

vyatta-dataplane (3.13.39) unstable; urgency=medium

  [ Paul Aitken ]
  * Add new codechecks script
  * Add SPDX license to Jenkinsfile
  * Jenkinsfile: use SRC_DIR
  * Add codechecks to Jenkinsfile

  [ ck407g ]
  * Changes for activation delay to start after the boot sfpd scan

  [ Thomas Kiely ]
  * Revert "Jumbo MTU capability omitted"

  [ Daniel Gollub ]
  * config: introduce control_cpumask parsing
  * dp_control_thread: introduce control-thread API
  * npf-rte-acl: register acl-opt as control-thread

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 20 Aug 2021 13:36:15 +0100

vyatta-dataplane (3.13.38) unstable; urgency=medium

  [ kalaivani vinothkumar ]
  * Dataplane restart resets mac aging to default val

  [ Cian O'Sullivan ]
  * Store SFP enforcement delay value on boot

  [ Paul Aitken ]
  * Add prComment to Jenkinsfile
  * Remove "OSC" stage name from Jenkinsfile

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 17 Aug 2021 19:27:04 +0100

vyatta-dataplane (3.13.37) unstable; urgency=medium

  [ Thomas Kiely ]
  * Jumbo MTU capability omitted

  [ ck407g ]
  * Remove SFP state when nodes are deleted

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 11 Aug 2021 16:44:50 +0100

vyatta-dataplane (3.13.36) unstable; urgency=medium

  [ Gavin Shearer ]
  * add function which notifies features then frees an mbuf
  * replace calls to rte_pktmbuf_free() to calls to fn which notifies

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 09 Aug 2021 13:59:14 +0100

vyatta-dataplane (3.13.35) unstable; urgency=medium

  [ Daniel Gollub ]
  * xfrm_client: don't negate the error-code twice

  [ Mark Gillott ]
  * twamp: propagate any UDP port registration error up to daemon
    (Fixes: VRVDR-55838)
  * twamp: increase the size of the UDP hash table (Fixes: VRVDR-55838)

  [ Daniel Gollub ]
  * debian: generate unversioned symbols/shlibs files
  * debian: update protobuf symbols
  * debian: ignore for disappearing symbols in Debian Bullseye builds

  [ ck407g ]
  * Changes to SFP disabling behaviour

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 06 Aug 2021 13:00:19 +0100

vyatta-dataplane (3.13.34) unstable; urgency=medium

  [ Ian Wilson ]
  * cgnat: Invalidate npf cache if a CGNAT translation occurs

  [ Daniel Gollub ]
  * npf-rte-acl: increase acl-opt frequency
  * npf-rte-acl: remove unused ring lookup
  * npf-rte-acl: adjust merge-trie parameters for high scale/TPS-rate
  * npf-rte-acl: grow rule-pool faster when merging
  * npf-rte-acl: introduce freeze threshold
  * npf-rte-acl: prevent infinite merge attempts
  * npf-rte-acl: document grow/max-rules/max-transaction defines
  * crypto: prepare best_weight for more then 64k SAs
  * crypto: avoid VFP lookups if there no bindings

  [ Paul Aitken ]
  * DPI: remove unused NPF_RPROC_ID_APP_GRP

  [ Daniel Gollub ]
  * crypto: bump SADB HT min/max bucket size
  * crypto: bump SPD HT max/min bucket size

  [ Cian O'Sullivan ]
  * Fix usage of undeclared TRUE/FALSE macros

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 04 Aug 2021 12:53:42 +0100

vyatta-dataplane (3.13.33) unstable; urgency=medium

  [ Thomas Kiely ]
  * Minor refactor - no functional change
  * Logging for ICMP rate limiting feature

  [ kalaivani vinothkumar ]
  * change in 'interface data X phy' show command

  [ ck407g ]
  * Rework SFP permit list to make vendor name optional
  * Added tests
  * Code fixes

  [ Srinivas Narayan ]
  * Change branch to Jarrow
  * Add a stage to build on OBS and submit for perf test

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 27 Jul 2021 18:30:00 +0100

vyatta-dataplane (3.13.32) unstable; urgency=medium

  [ Mike Larson ]
  * Initial groundwork for pipeline refactoring: outfw and snat
  * Separate output FW and SNAT into pipeline nodes
  * split v4 and v6 out fw entry nodes
  * Collapse v6 pre-out-fw and out-fw into single node
  * Remove hook/shim from function names

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 27 Jul 2021 00:48:50 +0100

vyatta-dataplane (3.13.31) unstable; urgency=medium

  [ Thomas Kiely ]
  * ICMP rate limiting off-by-one

  [ Gaurav Gehani ]
  * vyatta-dataplane: fix coverity errors

  [ Cian O'Sullivan ]
  * Make SFP feature return valid JSON

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 22 Jul 2021 13:20:50 +0100

vyatta-dataplane (3.13.30) unstable; urgency=medium

  [ Gavin Shearer ]
  * npf: ensure timeout-get functions cope with no dataplane session

  [ Paul Aitken ]
  * add missing idempotency
  * remove trailing blank lines

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 20 Jul 2021 13:00:39 +0100

vyatta-dataplane (3.13.29) unstable; urgency=medium

  [ Gavin Shearer ]
  * pipeline: add static assertions to detect too many feature enums

  [ Simon Barber ]
  * Add SFP debug flags
  * Change SFPd socket to subscriber
  * Add SFPd socket init
  * Initial SFP permit list feature code
  * UT: Add initial sfp permit-list UT framework
  * UT: Send SFP permit list delete
  * Add vplsh cmd to verify parts
  * UT: Add check command to verify SFP permit-list
  * Add global permit list mismatch cfg
  * UT: Add code to validate the mismatch config
  * Add SFP record structure
  * Add common hash table functions
  * Add SFPd socket  msg handler
  * Start and Process updates from  the SFPd
  * UT:Generate SFPd status file and notify system
  * Process SFPd updates
  * Validate SFPd  status against permit-list
  * UT:Wrapper utility call to get system uptime
  * Add sfp_holddown flag
  * Add sfp device dump
  * UT: Add support for retrieving known SFP devices
  * Upon dataplane restart load any existing SFP status file
  * Only walk SFP tables if feature is configured
  * UT:Release SFPd socket at tidy update
  * Process SFPd notifications event if permit-list not active

  [ ck407g ]
  * Shortened protobuf message names
  * Changes to Data model

  [ Simon Barber ]
  * UT: Add UT support for the new multi level yang model

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 12 Jul 2021 09:28:51 +0100

vyatta-dataplane (3.13.28) unstable; urgency=medium

  [ Paul Aitken ]
  * remove unused session_sentry_insert_pkt
  * change session APIs to static
  * remove unused dp_session_get_state_name
  * correct dp_session_pack to dp_session_pack_pb
  * convert _dp_test_session_msg_check_rcvd to PB
  * remove unused dp_session_pack and associated infra
  * remove unused session_npf_pack_* functions
  * remove unused NPF code
  * mark session UT helper functions
  * mark NPF UT helper functions
  * remove unused NPF functions
  * remove unused CGNAT functions
  * mark CGNAT UT helper functions

  [ Ian Wilson ]
  * cgnat: Add an exclude address-group to cgnat_policy
  * cgnat: Add config for exclude policy address-group
  * cgnat: Add return code counter for excluded packets
  * cgnat-ut: Configure a cgnat policy with an exclude address-group
  * cgnat-ut: Add unit-tests to for cgnat exclude address-group
  * cgnat: Enable use of CGNAT exclude address-group

  [ Mark Gillott ]
  * twamp: correct the order of timestamps (Fixes: VRVDR-55567)

  [ Daniel Gollub ]
  * meson: strip buildsystem specific version additions
  * npf-rte-acl: fix spurious lookup rte-acl rule failures

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 08 Jul 2021 10:37:32 +0100

vyatta-dataplane (3.13.27) unstable; urgency=medium

  [ Kalaivani Vinothkumar ]
  * Coverity: Uninitialized pointer read

  [ Simon Barber ]
  * Add SFPd URL and status file to config
  * Create SFPd socket and add msg handler
  * UT: Added SFPd socket and file details
  * SFP Permit List protobuf defs

 -- Simon Barber <sbarber@vyatta.att-mail.com>  Sun, 27 Jun 2021 10:35:00 +0100

vyatta-dataplane (3.13.26) unstable; urgency=medium

  [ Srinivas Narayan ]
  * UT: Reduce policy count to 8K

  [ Thomas Kiely ]
  * Improve ICMP rate limit json output

  [ Mark Gillott ]
  * twamp: log failed UDP port in host order
  * twamp: use a hash table for session management (Fixes: VRVDR-55377)

  [ Gavin Shearer ]
  * pipeline: move down ipv[46]-validate enums to allow early features

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 24 Jun 2021 11:18:18 +0100

vyatta-dataplane (3.13.25) unstable; urgency=medium

  [ Paul Aitken ]
  * Jenkinsfile
  * debian rules
  * debian rules

  [ Mark Gillott ]
  * twamp: add debugging symbols (Fixes: VRVDR-53580)
  * twamp: add protobuf definitions (Fixes: VRVDR-53580)
  * twamp: process twamp offload control messages (Fixes: VRVDR-53580)
  * twamp: add stub I/O function (Fixes: VRVDR-53580)
  * twamp: register local UDP port (Fixes: VRVDR-53580)
  * twamp: process twamp init control message (Fixes: VRVDR-53580)
  * twamp: process twamp create control message (Fixes: VRVDR-53580)
  * twamp: process twamp delete control message (Fixes: VRVDR-53580)
  * twamp: process twamp counters control message (Fixes: VRVDR-53580)
  * twamp: add op-mode handler (Fixes: VRVDR-53580)
  * twamp: UT for control messages (Fixes: VRVDR-53580)
  * twamp: UT for IPv4 & IPv6 control messages (Fixes: VRVDR-53580)
  * twamp: UT for scale testing of test sessions (Fixes: VRVDR-53580)
  * twamp: process twamp un-authenticated data messages (Fixes: VRVDR-53580)
  * twamp: process IPv4 twamp data messages (Fixes: VRVDR-53580)
  * twamp: process IPv6 twamp data messages (Fixes: VRVDR-53580)
  * twamp: UT for twamp offload of IPv4 & IPv6 data messages
    (Fixes: VRVDR-53580)
  * twamp: UT for twamp offload data message size (Fixes: VRVDR-53580)

  [ Ian Wilson ]
  * cgnat-alg: Re-order alg ID enum
  * cgnat-alg: Add show and clear summary cmd handlers and add session stats
  * cgnat-alg: Return json for ALG pinhole table entries
  * cgnat-alg: Re-order the return code enums
  * cgnat-alg: Return json for ALG ctrl packet inspection return code enums

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 16 Jun 2021 09:55:08 +0100

vyatta-dataplane (3.13.24) unstable; urgency=medium

  [ Srinivas Narayan ]
  * Use pmd type instance count to trigger loadshare

  [ Charles (Chas) Williams ]
  * Update clang-format to match checkpatch

  [ Daniel Gollub ]
  * rldb: bump allowed maximum of rules
  * npf-rte-acl: introduce pending-delete ring
  * npf-rte-acl: fix memory leak of transaction-entries array
  * npf-rte-acl: cutover to pending-delete ring usage
  * ut: introduce dp_test_crypto_wait_for_xfrm_resp
  * rldb: let rldb_del_rule report fine-grain errors
  * npf-rte-acl: keep writable entries at the head of the list
  * npf-rte-acl: increase the pdel ring size to merge-trie size
  * npf-rte-acl: check if trie needs to grow prior copying
  * npf-rte-acl: grow rule pool by optimal mempool object number
  * npf-rte-acl: avoid rule-pool growing in too small chunks
  * npf-rte-acl: prevent dereferencing of release m_trie
  * npf-rte-acl: grow the rule-pool if required before adding rules
  * npf-rte-acl: don't destroy empty tries in merging state
  * npf-rte-acl: full tries are no merge candidates
  * npf-rte-acl: ACL opt thread should only delete tries in merging state
  * npf-rte-acl: introduce OPTIMIZE_MAX_NEW_TRIES
  * npf-rte-acl: introduce NPF_M_TRIE_FLAG_REBUILD
  * npf-rte-acl: stage npf_rte_acl_optimize_merge_prepare
  * npf-rte-acl: stage npf_rte_acl_optimize_merge_build
  * npf-rte-acl: stage npf_rte_acl_optimize_merge_rebuild
  * npf-rte-acl: stage npf_rte_acl_optimize_merge_finalize
  * npf-rte-acl: switch to npf_rte_acl_optimize_merge_prepare
  * npf-rte-acl: remove trie-loop from npf_rte_acl_copy_rules
  * npf-rte-acl: switch to npf_rte_acl_optimize_merge_{re,}build
  * npf-rte-acl: drop unused npf_rte_acl_delete_pending_rules method
  * npf-rte-acl: switch to npf_rte_acl_optimize_merge_finalize
  * npf-rte-acl: introduce max merge tries per ACL opt thread cycle define
  * ut: disable debug logging by default in dp_test_crypto_perf_scale
  * ut: dp_test_crypto_perf_scale perform policy batch commits

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 15 Jun 2021 07:15:04 +0100

vyatta-dataplane (3.13.23) unstable; urgency=medium

  [ Daniel Gollub ]
  * crypto: fix SADB crypto sym session pool growing
  * crypto: increase SA session limit to 256k
  * npf-rte-acl: fix SPD pool growing

  [ Alan Dewar ]
  * QoS: remove unused pcp_bitmap variable
  * QoS: stop requesting unnecessary traffic-class (Fixes: VRVDR-55318)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 11 Jun 2021 11:27:08 +0100

vyatta-dataplane (3.13.22) unstable; urgency=medium

  [ Daniel Gollub ]
  * debian: depend on rte-crytpodev-session-sym-pool-empty
  * crypto: initial support for growing session pool

  [ Mark Gillott ]
  * vrf: populate the name field (Fixes: VRVDR-55262)

  [ Daniel Gollub ]
  * ut: support control of policy commits dp_test_crypto_utils

  [ Srinivas Narayan ]
  * sfp: Use eeprom value for tx power only if interface is up
  * sfp: Print status byte read from EEPROM

  [ Ian Wilson ]
  * npf-alg: null deref in npf_alg_sip_create_instance

  [ Ramkumar Ganapathysubramanian ]
  * Fix issue in DSCP remark map on a vif sub-interface

  [ Daniel Gollub ]
  * npf-rte-acl: rename ACL rule pool
  * npf-rte-acl: stage npf_rte_acl_mempool methods
  * npf-rte-acl: prepare npf_rte_acl_copy_rules for growing rule pool
  * npf-rte-acl: enable support for growing rule pool

  [ Srinivas Narayan ]
  * npf-rte-acl: Improve debugging
  * npf-rte-acl: Unlock merge lock while returning prematurely
  * npf-rte-acl: Minor optimizations
  * rldb: Check for init failure in npf_rte_acl

  [ Daniel Gollub ]
  * npf-rte-acl: switch to CRC hashing
  * npf-rte-acl: consider all rule deletion errors as fatal
  * npf-rte-acl: Release merge lock in error conditions
  * npf-rte-acl: release new merge trie in case optimization fails

  [ Ian Wilson ]
  * cgnat-alg: Add boolean to denote if ALG session is a parent or child
  * cgnat-alg-pptp: Remove old PPTP header inspection
  * cgnat-alg-pptp: Inspect PPTP_OUT_CALL_REQ messages
  * cgnat-alg-pptp: Inspect PPTP_OUT_CALL_REPLY messages
  * cgnat-alg: Parse PPTP_CALL_CLEAR_REQ and PPTP_CALL_DISCONN_NOTIFY msgs
  * cgnat-alg-pptp: Add unit-test cgn_pptp6
  * cgnat-alg-pptp: Add unit-test cgn_pptp7
  * cgnat-alg-pptp: Only parse GRE pkts if PPTP ALG is enabled
  * cgnat-alg-pptp: Do not allow non-ALG GRE pkts to create a session
  * cgnat-alg-pptp: Note Call ID from message other than out-req/reply

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 10 Jun 2021 12:46:56 +0100

vyatta-dataplane (3.13.21) unstable; urgency=medium

  [ Ian Wilson ]
  * cgnat-alg: Add a 'closing' state to CGNAT states
  * cgnat-alg: Add timeouts for CGNAT 'closing' state
  * cgnat-alg: Add functions to set sessions to closing state

  [ Thomas Kiely ]
  * Protobuf definition for ICMP Rate Limiting feature
  * ICMP Rate Limiting for v4
  * ICMP Rate Limiting for v6

  [ Mike Manning ]
  * VM interface speed and duplex incorrectly set on KVM

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 03 Jun 2021 07:54:50 +0100

vyatta-dataplane (3.13.20) unstable; urgency=medium

  [ Daniel Gollub ]
  * crypto: netlink IPv4 selector is in network byte-order

  [ Paul Aitken ]
  * Remove NB from CODEOWNERS

  [ Mike Manning ]
  * Dataplane crash in fal_tx_pkt_burst

  [ Charles (Chas) Williams ]
  * clang: quiet warning about uninitialized value (Bugfix: VRVDR-55125)

  [ Mark Gillott ]
  * ecmp: add new next-hop flag - RTF_NH_NEEDS_HW_RES (Fixes: VRVDR-53410)
  * ecmp: force IPv6 resolution (ND6) for each ECMP member (Fixes: VRVDR-53410)
  * ecmp: force IPv4 resolution (ARP) for each ECMP member (Fixes: VRVDR-53410)

  [ Ian Wilson ]
  * npf-alg: Check SIP request hash table pointer is valid
  * cgnat-alg: Enable sub-sessions for ALG sessions
  * cgnat-alg: Add show alg status
  * cgnat-alg: Caching of TCP pkts should use the 'doff' param for l4 size
  * cgnat-alg-pptp: Cache Enhanced GRE header
  * cgnat-alg-pptp: Initialize PPTP session
  * cgnat-alg: Add function to transfer a mapping
  * cgnat-alg-pptp: Adds inspection of PPTP control packets
  * cgnat-alg-pptp: Adds lookup and processing of PPTP pinhole
  * cgnat-alg-pptp: Add translation of enhanced GRE packets
  * cgnat-alg-pptp-ut: Add function to send NATd enhanced GRE packet
  * cgnat-alg-pptp-ut: Add test cgn_pptp1
  * cgnat-alg-pptp-ut: Add function to fetch and print cgnat sessions json
  * cgnat-alg-pptp-ut: Adds test cgn_pptp2
  * cgnat-alg-pptp-ut: Adds test cgn_pptp3
  * cgnat-alg-pptp-ut: Adds test cgn_pptp4
  * cgnat-alg-pptp-ut: Adds test cgn_pptp5
  * cgnat-alg-pptp: Tweaks to config and json output for PPTP ALG

  [ Daniel Gollub ]
  * ut: make use of unique rule_no in crypto_perf_scale

  [ Srinivas Narayan ]
  * npf-rte-acl: Add pools for subtries
  * rldb: Move to using memory pools in npf_rte_acl
  * npf-rte-acl: don't expose QSBR RCU via API
  * npf-rte-acl: rename trie name to ctx_name
  * npf-rte-acl: stage trie context as separate functions
  * npf-rte-acl: Move trie context creation to separate function
  * npf-rte-acl: Introduce state for trie context
  * npf-rte-acl: Populate json dump callbacks
  * npf-rte-acl: Add mechanism to consult multiple tries
  * npf-rte-acl: Add debug cmd and messages for npf_rte_acl
  * npf: Add background merge thread for ACLs
  * crypto: print policies only if hash tables exist
  * ut: Enable subset match for spd
  * crypto: print rule databases
  * ut: enable debugs for crypto & npf_rte_acl
  * npf-rte-acl: Merge algorithm skeleton

  [ Daniel Gollub ]
  * ut: re-enable crypto_perf_scale for full runs
  * npf-rte-acl: move mtrie put/get declarations
  * npf-rte-acl: shorten acl optimization thread name
  * npf-rte-acl: implement npf_rte_acl_copy_rules
  * npf-rte-acl: stage npf_rte_acl_delete_pending_rules method
  * npf-rte-acl: introduce npf_rte_acl_delete_trie method
  * npf-rte-acl: always create tries with at least max_rules 8
  * npf-rte-acl: use fresh tries from the mempool
  * npf-rte-acl: let npf_rte_acl_create_trie report fine-grain errors
  * npf-rte-acl: let npf_rte_acl_put/get_trie report fine-grain errors
  * npf-rte-acl: use fresh tries from the ring
  * npf-rte-acl: avoid direct access to trie ring
  * npf-rte-acl: complete debug logging for trie-state updates
  * npf-rte-acl: reset acl_ctx prior returning it to the mempool
  * npf-rte-acl: implement npf_rte_acl_select_candidate_tries method
  * npf-rte-acl: error handling for new trie creation in acl-opt thread
  * npf-rte-acl: release merged tries to pool/ring
  * npf-rte-acl: repurpose npf_rte_acl_add_trie for insert only
  * npf-rte-acl: let npf_rte_acl_add_rule report fine-grain errors
  * npf-rte-acl: make acl-opt thread teardown more robust
  * npf-rte-acl: RCU protect the match_ctx list
  * npf-rte-acl: build and rebuild the new merge-trie
  * npf-rte-acl: implement pending_deletes
  * npf-rte-acl: create new tries with maximum rule size
  * jenkins: switch to DANOS:Unstable on build-release

  [ Paul Aitken ]
  * commit size check: show total lines changed

  [ Gavin Shearer ]
  * ut: allow some vif-related test library fns to be used by plugins

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 01 Jun 2021 15:36:13 +0100

vyatta-dataplane (3.13.19) unstable; urgency=medium

  [ ck407g ]
  * Added 'Valid dynamic or static ARP entries added|deleted' to dataplane arp statistics
  * Removed a duplicate call to llentry_routing_uninstall

  [ Gavin Shearer ]
  * ut: move crypto test header files so accessible by plugins
  * ut: add s2s configure functions callable from plugins
  * ut: update s2s regular tests to use new s2s crypto library code
  * ut: update s2s passthru tests to use new s2s crypto library code

  [ Simon Barber ]

 -- Simon Barber <sbarber@vyatta.att-mail.com>  Mon, 24 May 2021 12:24:56 +0100

vyatta-dataplane (3.13.18) unstable; urgency=medium

  [ Ian Wilson ]
  * alg: Move ALG session data to alg_session.h
  * alg: Add consistency to specific ALG flag defines
  * alg: RPC alg is unnecessarily parsing rpc data flow packets
  * alg: Move alg npf session accessors into alg_session.c
  * alg: Move freeing of ALG session data to one function
  * alg: Add functions to test if a session is an ALG cntl or data session
  * alg: Simplify npf_alg_nat_inspect by using ALG_MASK_CNTL_FLOW
  * alg: Delete individual ALG tests for a control session
  * alg: Change rpc to use ALG session data union
  * alg: Change sip to use ALG session data union
  * alg: Remove ftp alg session destroy function
  * alg: Remove sa_private and accessor functions
  * alg: Rename one-time constructor function
  * alg: Remove const from struct npf_alg
  * alg: Move sip_private to a union in npf_alg
  * alg: Move rpc_private to a union in npf_alg
  * alg: Remove na_private from struct npf_alg

  [ Charles (Chas) Williams ]
  * meson: name changes for poll mode drivers (Bugfix: VRVDR-54129)
  * tests: stop using deprecated constants (Bugfix: VRVDR-54129)
  * tests: sw_port: update for API changes (Bugfix: VRVDR-54129)
  * capture: convert to new mbuf dynfield API (Bugfix: VRVDR-54129)
  * dpdk_eth_if: fix missing header file (Bugfix: VRVDR-54129)
  * crypto: fix missing enumeration flags (Bugfix: VRVDR-54129)
  * hotplug: fix internal API warnings (Bugfix: VRVDR-54129)
  * pktmbuf: use mbuf dynfield instead of udata64 (Bugfix: VRVDR-54129)
  * debian: depend on a later version of DPDK (Bugfix: VRVDR-54129)
  * crypto: add hot marking and unroll loop (Bugfix: VRVDR-54129)
  * crypto: rte_ring_sc_dequeue_burst can return 0 (Bugfix: VRVDR-54129)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 19 May 2021 16:16:16 +0100

vyatta-dataplane (3.13.17) unstable; urgency=medium

  [ Daniel Gollub ]
  * npf_rte_acl: use rte-acl defer-queue

  [ Srinivas Narayan ]
  * 3.12.53

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 18 May 2021 07:07:44 +0100

vyatta-dataplane (3.13.16) unstable; urgency=medium

  [ Daniel Gollub ]
  * rldb: use dedicated priority value for ACL rules
  * ut: crypto s2s passthrough correct priorities

  [ Srinivas Narayan ]
  * 3.12.52

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 14 May 2021 13:50:37 +0100

vyatta-dataplane (3.13.15) unstable; urgency=medium

  [ Mike Larson ]
  * npf: minor cleanup--dead code removal

  [ Paul Aitken ]
  * parallelise Jenkinsfile
  * reindent Jenkinsfile

  [ Ian Wilson ]
  * cgnat: Add missing includes to cgn_rc.h
  * cgnat-alg: Add config command and port/protocol lookup table
  * cgnat-alg: Create CGNAT ALG pinhole table
  * cgnat-alg: Add CGNAT return codes for ALGs
  * cgnat-alg: Add ALG params to CGNAT packet cache
  * cgnat-alg: Add ALG params to CGNAT session
  * cgnat-alg: Add stub ALG pinhole table entry structure
  * cgnat-alg: Add CGNAT ALG session structure and handling
  * cgnat-alg: Link child ALG sessions to parent ALG sessions
  * cgnat-alg: Add CGNAT ALG return codes
  * cgnat-alg: Pinhole table entry add
  * cgnat-alg: Pinhole table garbage collection
  * cgnat-alg: Pinhole table delete entry
  * cgnat-alg: Pinhole table flush, expire and cleanup
  * cgnat-alg: Pinhole table lookup
  * cgnat-alg: Expire pinholes for a specific CGNAT session
  * cgnat-alg: Add pinhole pairing
  * cgnat-alg: Add ALG inspection routine

  [ Paul Aitken ]
  * Jenkinsfile improvements

  [ Ian Wilson ]
  * cgnat-alg: Lookup protocol and port to determine if new session is ALG
  * cgnat-alg: Inspect packets of ALG control/parent sessions
  * cgnat-alg: Add hooks for ALG data/child packets flows
  * cgnat-alg: Write json for pinhole table entries for a specific session
  * cgnat-alg: Write json for ALG sessions.  Filter on ALG sessions
  * cgnat-alg: Ensure the ALG only inspects correct control session pkts

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 14 May 2021 13:49:45 +0100

vyatta-dataplane (3.13.14) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: fix cleanup race
  * 3.12.50

  [ Alan Dewar ]
  * GPC: prevent crash when GPC rules not contiguous (Fixes: VRVDR-54893)

  [ Srinivas Narayan ]
  * 3.12.51

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 30 Apr 2021 17:16:49 +0100

vyatta-dataplane (3.13.13) unstable; urgency=medium

  [ Nicholas Brown ]
  * maximum line length is now 100
  * Separate check patch and commit size check

  [ Paul Aitken ]
  * Don't ignore .github
  * Add github check patch check
  * Add github gitlint check
  * Add github commit size check
  * Reformat Jenkinsfile

  [ Nicholas Brown ]
  * jenkinsfile: catchError on build/SA stages

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 30 Apr 2021 17:15:21 +0100

vyatta-dataplane (3.13.12) unstable; urgency=medium

  [ Nachiketa Prachanda ]
  * fwsync: session pack/restore protobuf messages
  * fwsync: convert sessions to protobuf c struct
  * fwsync: convert npf_session to protobuf-c message
  * fwsync: pack a firewall session using protobuf
  * session: add function to insert a restored session
  * npf: rename npf_session_npf_pack_activate
  * fwsync: session restore from protobuf-c structs
  * fwsync: npf_session restore from protobuf structs
  * fwsync: add firewall session restore from protobuf
  * fwsync: add protobuf support to dp_session_restore
  * fwsync: add session update to dp_session_pack_pb
  * fwsync: update session from protobuf messages
  * fwsync: protobuf session support in unit tests lib
  * ut: unit test for protobuf session packing
  * debian: virtual package for protobuf session pack
  * fwsync: allow session deletion on update
  * ut: add fwsync protobuf session update tests

  [ Srinivas Narayan ]
  * 3.12.49

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 28 Apr 2021 22:38:49 +0100

vyatta-dataplane (3.13.11) unstable; urgency=medium

  [ Nicholas Brown ]
  * Artifact the meson testlog.txt file

  [ Ian Wilson ]
  * alg: Replace se_init function ptr with a switch statement
  * alg: Replace se_destroy function ptr with a switch statement
  * alg: Replace se_expire function ptr with a switch statement
  * alg: Replace se_json function ptr with a switch statement
  * alg: Replace inspect function ptr with a switch statement
  * alg: Replace nat_inspect function ptr with a switch statement
  * alg: Replace nat_in and nat_out function ptrs with a switch statement
  * alg: Replace the periodic function ptr with a switch statement
  * alg: Replace the tuple_delete function ptr with a switch statement
  * alg: Replace the reset function ptr with a switch statement
  * alg: Replace the name function ptr with a switch statement
  * alg: Replace the config function ptr with a switch statement
  * alg: Remove unused alg npf_alg_ops structure

  [ Nicholas Brown ]
  * Mention the DCO `Signed-off-by` requirement

  [ Srinivas Narayan ]
  * ut: Add markers at the beginning and end of testcases

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 28 Apr 2021 22:37:54 +0100

vyatta-dataplane (3.13.10) unstable; urgency=medium

  [ Alan Dewar ]
  * GPC: check ifp->fal_l3 rather than ifp->if_created
  * GPC: delay FAL programming until interface ready (Fixes: VRVDR-54766)
  * GPC: remove unnecessary casting

  [ Srinivas Narayan ]
  * crypto: Flow cache invalidation should occur from main thread
  * Revert "crypto: Move sa unbinding from PMD to rcu callback"
  * crypto: Rework SA cleanup sequence
  * crypto: Ensure that the correct PMD is picked always
  * 3.12.48

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 28 Apr 2021 13:00:34 +0100

vyatta-dataplane (3.13.9) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add symbols files for ABI tracking
  * Remove --parallel from rules as it's default
  * Update .gitignore
  * Remove unused debian/control macros

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 28 Apr 2021 12:58:42 +0100

vyatta-dataplane (3.13.8) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add support for dpkg-mergechangelogs

  [ Srinivas Narayan ]
  * crypto: Move sa unbinding from PMD to rcu callback
  * 3.12.46

  [ Shubham Shrivastava ]
  * DPI: Avoid concurrent access of ndpi_flow_struct by multiple lcores
  * DPI: Max packets check and detection giveup for ndpi flow

  [ Simon Barber ]
  * CRYPTO:Ensure SA return codes valid
  * CRYPTO: Fix policy return codes

  [ Srinivas Narayan ]
  * 3.12.47

  [ Nicholas Brown ]
  * Move vfp create/del function to public header

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 26 Apr 2021 15:14:07 +0100

vyatta-dataplane (3.13.7) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Rename dp_test_npf_alg_sip_nat.c to dp_test_npf_alg_sip.c
  * ut: Change how SDP msgs are checked in SIP unit-tests
  * ut: Fix TCP test utility used by npf ALG tests for TCP sequence numbers
  * ut: Add test for SIP ALG with TCP transport
  * ut: Test npf/alg/sip cleanup when session and NAT rule are destroyed
  * alg: Store session handle in SIP request structure
  * alg: Move code to release SIP media reservation into separate routine
  * alg: Prevent SIP media reservations from being released more than once
  * alg: Flush stored SIP NAT mappings when session is destroyed
  * alg: Store session handle in SIP request structure
  * ut: ALG reset should be last thing in dp_test_npf_cleanup
  * ut: Delete VRF while SIP ALG session and tuples exist
  * cgnat: Fixup some CGNAT code comments
  * cgnat: Add asserts where counters are decremented
  * cgnat: Move objects in struct cgn_packet
  * cgnat: Add functions to get packet payload size and pointer
  * cgnat: Add backwards sub-session sentry to json
  * cgnat: Add functions to get and set sub-session sentry ID
  * cgnat: Check or assert mapping params on entry to cgn_session_establish
  * cgnat: Add direction param to session establish functions

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 22 Apr 2021 14:52:50 +0100

vyatta-dataplane (3.13.6) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Allow unit-tests to reset session ID to 0
  * ut: Test connsync packing and restoration of SNAT session
  * ut: Verify the SNAT session json ssync3 test
  * npf: Fix SNAT session restoration from connsync buffer

  [ Mark Gillott ]
  * capture: ensure final cleanup occurs after interface cleanup
    (Fixes: VRVDR-54831)

  [ Srinivas Narayan ]
  * Move crypto & UDP teardown to a later point

  [ Charles (Chas) Williams ]
  * fal: add FAL_RET_PLUGIN_CONSUMED framer type (Bugfix: VRVDR-53937)
  * pktmbuf: add public API to set vrf (Bugfix: VRVDR-54447)

  [ Srinivas Narayan ]
  * 3.12.44

  [ Ian Wilson ]
  * npf: Ensure NAT policy is ref-counted when stored in rule or session

  [ Gavin Shearer ]
  * gpc: add request for hardware commit after processing GPC protobuf msg

  [ Alan Dewar ]
  * GPC: prevent crash when optimisation is off (Fixes: VRVDR-54885)

  [ Srinivas Narayan ]
  * 3.12.45

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 15 Apr 2021 14:10:11 +0100

vyatta-dataplane (3.13.5) unstable; urgency=medium

  [ Ian Wilson ]
  * cgnat: Move enum cgn_dir from cgn.h to cgn_dir.h
  * cgnat: Add cgnat cache boolean to denote cgnat pkt or non-cgnat pkt
  * cgnat: Add cgnat cache boolean to denote hairpinned pkt
  * cgnat: Move the jump label for hairpinned pkts
  * cgnat: Simplify the CGNAT packet disposition decision
  * cgnat: Zero the cgnat cache structure before initialising
  * cgnat: Zero the cgnat mapping info struct before initialising
  * cgnat: Move declaration of mapping info to ipv4_cgnat_common
  * cgnat: Session destroy fn should call existing clear mapping fn
  * cgnat: Pass a cgn_map pointer into cgn_session_map
  * npf: Use refcnt to gate cgnat session destroy
  * cgnat: Add session accessor functions
  * cgnat: Remove two goto's from cgn_session_activate
  * cgnat: Split cgn_session_show into two functions
  * cgnat: Remove the gotos from cgn_map_put
  * cgnat: Add RTE_ALIGN fix to the policy hash function
  * cgnat: Split cgn_sess_state_inspect into three functions
  * cgnat: The first 4 values of TCP and non-TCP state enums are identical
  * cgnat: Fixup includes and add missing incomplete refs
  * cgnat: Split up cgn_map_get function #1
  * cgnat: Split up cgn_map_get function #2
  * cgnat: Remove ALWAYS_INLINE from cgn_translate_at
  * npf: Ensure NAT policy is ref-counted when stored in rule or session
  * Replace packed VXLAN encap structures with individual ptrs

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 15 Apr 2021 13:22:23 +0100

vyatta-dataplane (3.13.4) unstable; urgency=medium

  [ Gavin Shearer ]
  * ippf/gpc: add missing refcount decrements when counters released

  [ Ian Wilson ]
  * npf: Prefix objects in connsyncs npf_pack_session_update with 'psu_'
  * npf: Removed packed attribute from naturally aligned connsync structs
  * npf: Create a connsync representation of 'struct npf_tcp_window'
  * npf: Remove the packed attribute from connsync npf_pack_session_update
  * npf: connsync npf_pack_session_state + npf_pack_npf_session multpl of 8
  * ut: Adjust dp_test_session ssync3 with changed msg size
  * ut: Add test dp_test_session.c ssync0 to check connsync data structs
  * npf: Bump connsync message version number from 0x0102 to 0x0103

  [ Nicholas Brown ]
  * Use custom_target instead of generator for sample
  * Add a build target to run clang-tidy

  [ Srinivas Narayan ]
  * 3.12.41

  [ Ian Wilson ]
  * ut: Rename npf alg ftp unit-tests
  * ut: Add npf alg ftp11 tests for source ports outside trans range
  * ut: Add npf alg ftp12 test for source ports outside trans range
  * ut: Change 5 of the npf alg ftp unit-tests to DP_START_TEST_FULL_RUN

  [ Nicholas Brown ]
  * Use osc in Jenkinsfile

  [ Ian Wilson ]
  * ut: Add npf ALG test to destroy ftp session before ftp ALG tuple
  * alg: Delete tuples created by a session when the session is destroyed
  * alg: Only iterate over tuple tables if count is != 0
  * alg: Remove the ifdefd NALG stub functions

  [ Simon Barber ]
  * CRYPTO: Minor tidyup of policy update
  * CRYPTO: Ensuring correct pr->flags handling during an update

  [ Ian Wilson ]
  * alg: Move alg enums to a new file alg_defs.h
  * ut: Add npf ALG test to destroy ftp session before ftp ALG tuple
  * alg: Delete tuples created by a session when the session is destroyed
  * alg: Only iterate over tuple tables if count is != 0

  [ Ramkumar Ganapathysubramanian ]
  * Fixed crash in QoS when removing egress map

  [ Frédéric Perrin ]
  * icmp6_redirect: set hlim to 255

  [ Simon Barber ]
  * 3.12.42

  [ Nicholas Brown ]
  * properly export env var in Jenkinsfile

  [ Ian Wilson ]
  * cgnat: Do not allow an existing subscriber to change policies

  [ aroberts ]
  * Add Aidan Gallagher to the reviewers for qos files

  [ Nicholas Brown ]
  * Use DANOS:Master for build

  [ Paul Aitken ]
  * DPI: ensure nDPI is init'd on all cores

  [ Alan Dewar ]
  * GPC: add initial counter support
  * GPC: retrieve a policer's red packet count
  * GPC: add support for resettable counters

  [ Srinivas Narayan ]
  * 3.12.43

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 07 Apr 2021 15:30:47 +0100

vyatta-dataplane (3.13.3) unstable; urgency=medium

  [ Derek Fawcus ]
  * lttp: Do not take address of packed field
  * shadow: Do not take address of packed field

  [ Ian Wilson ]
  * ut: Display first different line when using pretty-print cmd check
  * npf: Allow unit-tests to reset session ID to 0
  * ut: Test connsync packing and restoration of SNAT session
  * ut: Verify the SNAT session json ssync3 test
  * npf: Fix SNAT session restoration from connsync buffer

  [ Nicholas Brown ]
  * Provide and use a C protobuf library
  * Add break/conflicts for moving protobuf C headers

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 22 Mar 2021 11:08:08 +0000

vyatta-dataplane (3.13.2) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Add pretty-print option to unit-test dp_test_check_json_state

  [ Srinivas Narayan ]
  * Revert "ut: Add pretty-print option to unit-test dp_test_check_json_state"

  [ Mark Gillott ]
  * capture: on cleanup serialise access to console socket (Fixes: VRVDR-53851)

  [ Nicholas Brown ]
  * qos_global_map_obj should be extern
  * Remove both definitions of icmp6stats
  * Make pppoe_map_tbl private
  * qos_external_buffer_congest_stats extern for tests
  * dp_test_pname defined in only 1 place
  * Update to debhelper compat level 12

  [ Ian Wilson ]
  * ut: Add pretty-print option to the core cmd_check function
  * ut: Add new cmd_check macro that does pretty-printing for json mismatches

  [ Charles (Chas) Williams ]
  * nh_common: avoid route/neighbor update races (Bugfix: VRVDR-53960)

  [ Srinivas Narayan ]
  * 3.12.40

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 17 Mar 2021 14:39:54 +0000

vyatta-dataplane (3.13.1) unstable; urgency=medium

  [ Nicholas Brown ]
  * master-next branch targets Vyatta:Master
  * Specify the OBS instance to use
  * Use gettid() from libc is available

  [ Ian Wilson ]
  * cgnat: Removed packed attribute from CGNAT session key structures
  * cgnat: Use 'out' sentry for sub-session table lookups for op-mode cmds
  * ut: Rename npf alg ftp unit-tests
  * ut: Add npf alg ftp11 tests for source ports outside trans range
  * ut: Add npf alg ftp12 test for source ports outside trans range
  * ut: Change 5 of the npf alg ftp unit-tests to DP_START_TEST_FULL_RUN

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 16 Mar 2021 11:27:06 +0000

vyatta-dataplane (3.12.53) unstable; urgency=medium

  [ Daniel Gollub ]
  * npf_rte_acl: use rte-acl defer-queue

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 18 May 2021 06:40:28 +0100

vyatta-dataplane (3.12.52) unstable; urgency=medium

  [ Daniel Gollub ]
  * rldb: use dedicated priority value for ACL rules
  * ut: crypto s2s passthrough correct priorities

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 13 May 2021 16:21:03 +0100

vyatta-dataplane (3.12.51) unstable; urgency=medium

  [ Alan Dewar ]
  * GPC: prevent crash when GPC rules not contiguous (Fixes: VRVDR-54893)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 30 Apr 2021 17:09:54 +0100

vyatta-dataplane (3.12.50) unstable; urgency=medium

  * crypto: fix cleanup race

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 29 Apr 2021 11:25:54 +0100

vyatta-dataplane (3.12.49) unstable; urgency=medium

  [ Nachiketa Prachanda ]
  * fwsync: session pack/restore protobuf messages
  * fwsync: convert sessions to protobuf c struct
  * fwsync: convert npf_session to protobuf-c message
  * fwsync: pack a firewall session using protobuf
  * session: add function to insert a restored session
  * npf: rename npf_session_npf_pack_activate
  * fwsync: session restore from protobuf-c structs
  * fwsync: npf_session restore from protobuf structs
  * fwsync: add firewall session restore from protobuf
  * fwsync: add protobuf support to dp_session_restore
  * fwsync: add session update to dp_session_pack_pb
  * fwsync: update session from protobuf messages
  * fwsync: protobuf session support in unit tests lib
  * ut: unit test for protobuf session packing
  * debian: virtual package for protobuf session pack
  * fwsync: allow session deletion on update
  * ut: add fwsync protobuf session update tests

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 28 Apr 2021 17:32:32 +0100

vyatta-dataplane (3.12.48) unstable; urgency=medium

  [ Alan Dewar ]
  * GPC: check ifp->fal_l3 rather than ifp->if_created
  * GPC: delay FAL programming until interface ready (Fixes: VRVDR-54766)
  * GPC: remove unnecessary casting

  [ Srinivas Narayan ]
  * crypto: Flow cache invalidation should occur from main thread
  * Revert "crypto: Move sa unbinding from PMD to rcu callback"
  * crypto: Rework SA cleanup sequence
  * crypto: Ensure that the correct PMD is picked always

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 27 Apr 2021 16:47:49 +0100

vyatta-dataplane (3.12.47) unstable; urgency=medium

  [ Shubham Shrivastava ]
  * DPI: Avoid concurrent access of ndpi_flow_struct by multiple lcores
  * DPI: Max packets check and detection giveup for ndpi flow

  [ Simon Barber ]
  * CRYPTO:Ensure SA return codes valid
  * CRYPTO: Fix policy return codes

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 22 Apr 2021 14:51:42 +0100

vyatta-dataplane (3.12.46) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add support for dpkg-mergechangelogs

  [ Srinivas Narayan ]
  * crypto: Move sa unbinding from PMD to rcu callback

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 16 Apr 2021 14:20:41 +0100

vyatta-dataplane (3.12.45) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Ensure NAT policy is ref-counted when stored in rule or session

  [ Gavin Shearer ]
  * gpc: add request for hardware commit after processing GPC protobuf msg

  [ Alan Dewar ]
  * GPC: prevent crash when optimisation is off (Fixes: VRVDR-54885)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 15 Apr 2021 12:33:39 +0100

vyatta-dataplane (3.12.44) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Allow unit-tests to reset session ID to 0
  * ut: Test connsync packing and restoration of SNAT session
  * ut: Verify the SNAT session json ssync3 test
  * npf: Fix SNAT session restoration from connsync buffer

  [ Mark Gillott ]
  * capture: ensure final cleanup occurs after interface cleanup
    (Fixes: VRVDR-54831)

  [ Srinivas Narayan ]
  * Move crypto & UDP teardown to a later point

  [ Charles (Chas) Williams ]
  * fal: add FAL_RET_PLUGIN_CONSUMED framer type (Bugfix: VRVDR-53937)
  * pktmbuf: add public API to set vrf (Bugfix: VRVDR-54447)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 12 Apr 2021 13:11:48 +0100

vyatta-dataplane (3.12.43) unstable; urgency=medium

  [ Nicholas Brown ]
  * properly export env var in Jenkinsfile

  [ aroberts ]
  * Add Aidan Gallagher to the reviewers for qos files

  [ Paul Aitken ]
  * DPI: ensure nDPI is init'd on all cores

  [ Alan Dewar ]
  * GPC: add initial counter support
  * GPC: retrieve a policer's red packet count
  * GPC: add support for resettable counters

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 07 Apr 2021 15:28:36 +0100

vyatta-dataplane (3.12.42) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Rename npf alg ftp unit-tests
  * ut: Add npf alg ftp11 tests for source ports outside trans range
  * ut: Add npf alg ftp12 test for source ports outside trans range
  * ut: Change 5 of the npf alg ftp unit-tests to DP_START_TEST_FULL_RUN

  [ Nicholas Brown ]
  * Use osc in Jenkinsfile

  [ Simon Barber ]
  * CRYPTO: Minor tidyup of policy update
  * CRYPTO: Ensuring correct pr->flags handling during an update

  [ Ian Wilson ]
  * ut: Add npf ALG test to destroy ftp session before ftp ALG tuple
  * alg: Delete tuples created by a session when the session is destroyed
  * alg: Only iterate over tuple tables if count is != 0

  [ Ramkumar Ganapathysubramanian ]
  * Fixed crash in QoS when removing egress map

  [ Frédéric Perrin ]
  * icmp6_redirect: set hlim to 255

  [ Simon Barber ]

 -- Simon Barber <sbarber@vyatta.att-mail.com>  Wed, 31 Mar 2021 22:15:50 +0100

vyatta-dataplane (3.12.41) unstable; urgency=medium

  [ Gavin Shearer ]
  * ippf/gpc: add missing refcount decrements when counters released

  [ Nicholas Brown ]
  * Use custom_target instead of generator for sample
  * Add a build target to run clang-tidy

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 22 Mar 2021 17:05:24 +0000

vyatta-dataplane (3.12.40) unstable; urgency=medium

  [ Mark Gillott ]
  * capture: on cleanup serialise access to console socket (Fixes: VRVDR-53851)

  [ Charles (Chas) Williams ]
  * nh_common: avoid route/neighbor update races (Bugfix: VRVDR-53960)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 17 Mar 2021 14:27:36 +0000

vyatta-dataplane (3.12.39) unstable; urgency=medium

  [ Alan Dewar ]
  * GPC: add utility functions for later use
  * GPC: add GPC structs and enums
  * GPC: give gpc_config.c a better name
  * GPC: add feature and table parsing
  * GPC: add rule and counter parsing
  * GPC: add match and action parsing
  * GPC: add more utility functions
  * GPC: add config walk functions
  * GPC: add initial no-op op-mode code
  * GPC: complete initial op-mode code
  * GPC: add rule action code and empty match code
  * GPC: fill in most empty rule match functions
  * GPC: add ip-prefix and icmp parse functions
  * UT: add initial protobuf utility functions
  * UT: extend the GPC unit-test to test something
  * GPC: create a FAL policer when necessary
  * GPC: call new gpc_db APIs to instantiate config
  * GPC: add new QoS actions to pmf_rule struct
  * GPC: add zeroed counters to op-mode json

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 16 Mar 2021 08:57:07 +0000

vyatta-dataplane (3.12.38) unstable; urgency=medium

  [ Simon Barber ]
  * PERF: Restore ALWAYS_INLINE to input NAT64 processing

  [ Derek Fawcus ]
  * ACL: Only process ACL GPC groups
  * ACL: Simplify by removing pmf_rlset_ext
  * GPC: Move function location within file
  * GPC: Add counters header files
  * GPC: Add counters code
  * GPC: Adjust GPC DB for counters
  * ACL: Use counter field in GPC rule
  * ACL: Simplify by removing pmf_attrl
  * ACL: Rename shimmed cntr accessors
  * ACL: Add new counter accessors
  * ACL: Store old cntr in rule owner
  * ACL: Adjust use of counters as rules modified
  * ACL: Control existence of cntg as rules altered
  * ACL: Add counter hardware notification mechanism
  * ACL: Notify hardware of counters
  * ACL: Debug dump of old and new counters
  * ACL: Switch to new counters facility
  * ACL: Remove old counter support code
  * ACL: Prepare to move op-mode support
  * ACL: Move the ACL structure dump command
  * ACL: Move the ACL counter show command
  * ACL: Move the ACL counter clear command
  * GPC: Rename routines pmf_hw_* -> gpc_hw_*
  * GPC: Rename files pmf_hw.[ch] -> gpc_hw.[ch]
  * ACL: Silence clang-tidy about string comparision

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 15 Mar 2021 15:29:27 +0000

vyatta-dataplane (3.12.37) unstable; urgency=medium

  [ Nicholas Brown ]
  * fix gcc 10 compiler error

  [ Srinivas Narayan ]
  * Include rcu.h in vyatta-dataplane-dev

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Sat, 13 Mar 2021 12:14:03 +0000

vyatta-dataplane (3.12.36) unstable; urgency=medium

  [ Daniel Gollub ]
  * debian: bump DPDK version depedency for rte-acl API changes

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 12 Mar 2021 16:51:24 +0000

vyatta-dataplane (3.12.35) unstable; urgency=medium

  [ Daniel Gollub ]
  * cgnat: include userspace RCU header
  * rcu: introduce generic rcu header
  * rcu: prefer generic rcu header include
  * rcu: refactor existing RCU code
  * rcu: prepare unified RCU API for general use
  * rcu: perform unified RCU thread registration
  * rcu: cutover to dp_rcu_thread_online/offline API
  * controller: use dp_rcu_ wrapper for quiescent state
  * rcu: introduce dp_rcu_barrier() wrapper
  * rcu: introduce dp_rcu_synchronize
  * rcu: introduce dp_rcu_read_(un)lock API
  * npf_rte_acl: report thread id to the RCU QS variable

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 12 Mar 2021 16:39:17 +0000

vyatta-dataplane (3.12.34) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add support for libcheck 0.15

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 12 Mar 2021 16:15:09 +0000

vyatta-dataplane (3.12.33) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * flow: ensure flow cache entry is zeroed for hashing (Bugfix: VRVDR-54681)

  [ Paul Aitken ]
  * DPI: change app group deletion from RCU to GC
  * DPI: change app group DB deletion from RCU to GC

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Fri, 12 Mar 2021 10:52:02 +0000

vyatta-dataplane (3.12.32) unstable; urgency=medium

  * crypto : Fix up ICV

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Wed, 10 Mar 2021 11:50:07 +0000

vyatta-dataplane (3.12.31) unstable; urgency=medium

  [ Simon Barber ]
  * Perf: Limit the nat64 processing pulled into the core pipeline

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 08 Mar 2021 09:57:03 +0000

vyatta-dataplane (3.12.30) unstable; urgency=medium

  [ Nicholas Brown ]
  * Tweak how Jenkins deals with rebuilding branches
  * Build against DANOS:Shipping:2105 in Jenkinsfile

  [ Thomas Kiely ]
  * Populate sci_vlan for L3 VIFs
  * Remove incorrect error message

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Thu, 04 Mar 2021 14:45:11 +0000

vyatta-dataplane (3.12.29) unstable; urgency=medium

  [ Paul Aitken ]
  * pl_gen_fused: fix E302
  * pl_gen_fused: fix E305
  * pl_gen_fused: fix E703
  * pl_gen_fused: fix E128
  * pl_gen_fused: fix E251
  * pl_gen_fused: fix E241
  * pl_gen_fused: fix F841
  * pl_gen_fused: fix F523
  * pl_gen_fused: fix F524
  * pl_gen_fused: fix E712
  * pl_gen_fused: fix E713
  * pl_gen_fused: fix C0325
  * pl_gen_fused: fix R1710
  * DPI: call ndpi_finalize_initalization

  [ Nachiketa Prachanda ]
  * npf: use rcu safe null check for sentry

  [ Simon Barber ]

 -- Simon Barber <sbarber@vyatta.att-mail.com>  Wed, 03 Mar 2021 10:08:00 +0000

vyatta-dataplane (3.12.28) unstable; urgency=medium

  [ Nicholas Brown ]
  * Consistently use compiler hot/cold defines/macros
  * Consistently use ALWAYS_INLINE compiler macro
  * make lpm_tbl24_get_next_hop_idx static
  * pl_gen_fused should use compiler defines/macros
  * Consistently use compiler __used define
  * Consistently use compiler __noinline define

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 23 Feb 2021 15:52:15 +0000

vyatta-dataplane (3.12.27) unstable; urgency=medium

  [ Nicholas Brown ]
  * Fix static analysis failures in alg sip nat tests

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Tue, 23 Feb 2021 10:28:32 +0000

vyatta-dataplane (3.12.26) unstable; urgency=medium

  [ Gavin Shearer ]
  * nat: don't panic system on APM sanity failure

  [ Nicholas Brown ]
  * Add a fused_mode build option
  * ability to disable fused_mode from package options
  * Mark Static Analysis stage failed in quality gate

  [ Ian Wilson ]
  * ut: Check for session struct size is not needed
  * cgnat: Re-arrange objects in 'struct cgn_sess2'
  * cgnat: Change sub-session table init parameters
  * cgnat: Add separate fwd and back hash table nodes for sub-session
  * cgnat: Add direction param to sub-session hash table key
  * cgnat: sub-session hash table changed to use forw and back sentries
  * cgnat: Change sub-session iterators to iterate over 'out' sentries
  * cgnat: Add two convenience sub-session key comparison functions
  * cgnat: Replace defines of s2_addr and s2_port with functions
  * cgnat: Replace define s2_expired with function
  * ut: Changes to cgnat unit-test to pass line number into helper functions

  [ Charles (Chas) Williams ]
  * tests: fix path redirection checks (Bugfix: VRVDR-54471)
  * vplane-uio: refactor supported devices into module
  * vplane-mlx-setup: configure all supported adapters
  * Remove xen support (Bugfix: VRVDR-54443)
  * vplane-mlx-setup: perl cleanup (Bugfix: VRVDR-54443)

  [ Paul Aitken ]
  * NPF: only call session_set_app when the session exists

  [ Nicholas Brown ]
  * master-next branch targets Vyatta:Master
  * Revert "master-next branch targets Vyatta:Master"

  [ Daniel Gollub ]
  * crypto: avoid dereferecing bad vrf_ctx pointer

  [ Thomas Kiely ]
  * Add kbits/bytes conversion macros

  [ Srinivas Narayan ]
  * crypto : Always flush flow cache after committing ruleset

  [ Ian Wilson ]
  * ut: Remove old SIP unit-test files
  * npf: Add a "trans-port-alloc" optional param to NAT ruleset cstore cmd
  * npf: Changed rule parsing action_keys array to be in alphabetic order
  * ut: Add port_alloc object to struct 'dp_test_npf_nat_rule_t'
  * ut: Add option to pass in payload parameters to dpt_udp
  * ut: Add test sip_nat10 and data set 1 to dp_test_npf_alg_sip_nat.c
  * ut: Add test sip_nat11 to dp_test_npf_alg_sip_nat.c
  * ut: Add test sip_nat12 to dp_test_npf_alg_sip_nat.c
  * ut: Add test sip_nat20 to dp_test_npf_alg_sip_nat.c
  * ut: Add test sip_nat21 to dp_test_npf_alg_sip_nat.c
  * ut: Add SIP data set #3
  * ut: Add test sip_nat30 to dp_test_npf_alg_sip_nat.c
  * ut: Add SIP data set #4
  * ut: Add test sip_nat40 to dp_test_npf_alg_sip_nat.c
  * Added SSCANF_TO_KSTRTO to check patch ignore list

  [ Charles (Chas) Williams ]
  * main: split port allocations out of port_conf (Bugfix: VRVDR-54440)
  * main: fix overflow of buffers counter (Bugfix: VRVDR-54440)
  * main: document struct offsets and sizes (Bugfix: VRVDR-54440)

 -- Srinivas Narayan <narayan@vyatta.att-mail.com>  Mon, 22 Feb 2021 21:48:18 +0000

vyatta-dataplane (3.12.25) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto : broaden error checking

  [ Ramkumar Ganapathysubramanian ]
  * Creating new structures to hold QoS egress map information
  * Qos changes to support hierarchical egress map

  [ Daniel Gollub ]
  * crypto: reset XFRM/nl seq counter on flush

  [ Gavin Shearer ]
  * fw: improve comment at "result:" in npf_hook_track()
  * fw: skip NAT processing with session in wrong direction
  * nat: split map_rcu_free sanity check into a different function
  * nat: only call map_rcu_free sanity if from GC function

 -- Srinivas Narayan <narayan@mail.eng.vyatta.net>  Fri, 05 Feb 2021 15:40:07 +0000

vyatta-dataplane (3.12.24) unstable; urgency=medium

  * Revert "GPC: add zeroed counters to op-mode json"
  * Revert "GPC: temporary commit to stop crashes"
  * Revert "GPC: add new QoS actions to pmf_rule struct"
  * Revert "GPC: call new gpc_db APIs to instantiate config"
  * Revert "GPC: create a FAL policer when necessary"
  * Revert "UT: extend the GPC unit-test to test something"
  * Revert "UT: add initial protobuf utility functions"
  * Revert "GPC: add ip-prefix and icmp parse functions"
  * Revert "GPC: fill in most empty rule match functions"
  * Revert "GPC: add rule action code and empty match code"
  * Revert "GPC: complete initial op-mode code"
  * Revert "GPC: add config walk functions"
  * Revert "GPC: add more utility functions"
  * Revert "GPC: add match and action parsing"
  * Revert "GPC: add rule and counter parsing"
  * Revert "GPC: add feature and table parsing"
  * Revert "GPC: give gpc_config.c a better name"
  * Revert "GPC: add GPC structs and enums"
  * Revert "GPC: add utility functions for later use"

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Tue, 02 Feb 2021 12:17:31 +0000

vyatta-dataplane (3.12.23) unstable; urgency=medium

  [ Alan Dewar ]
  * GPC: add utility functions for later use
  * GPC: add GPC structs and enums
  * GPC: give gpc_config.c a better name
  * GPC: add feature and table parsing
  * GPC: add rule and counter parsing
  * GPC: add match and action parsing
  * GPC: add more utility functions
  * GPC: add config walk functions
  * GPC: add initial no-op op-mode code
  * GPC: complete initial op-mode code
  * GPC: add rule action code and empty match code
  * GPC: fill in most empty rule match functions
  * GPC: add ip-prefix and icmp parse functions
  * UT: add initial protobuf utility functions
  * UT: extend the GPC unit-test to test something
  * GPC: create a FAL policer when necessary
  * GPC: call new gpc_db APIs to instantiate config
  * GPC: add new QoS actions to pmf_rule struct
  * GPC: temporary commit to stop crashes
  * GPC: add zeroed counters to op-mode json

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Tue, 26 Jan 2021 14:03:18 +0000

vyatta-dataplane (3.12.22) unstable; urgency=medium

  [ Srinivas Narayan ]
  * ut: Add calls to cleanup NPF state
  * ut: Add call to cleanup NPF state between tests

  [ Daniel Gollub ]
  * npf: expose npf_masklen_to_grouper_mask to allow usage in rldb
  * npf_rte_acl: Add npf_rte_acl_del_rule method
  * npf_rte_acl: Stage transaction implementation
  * npf_rte_acl: cutover to transactions
  * npf_rte_acl: more fine-grain return value for match

  [ Srinivas Narayan ]
  * Initial version of NPF rule database API

  [ Daniel Gollub ]
  * rldb: base implementation
  * rldb: implement rldb dump methods
  * rldb: implement stats methods
  * rldb: implement rldb_rule_handle helpers
  * rldb: implement rldb_find_rule method
  * rldb: implement transaction methods
  * rldb: implement rldb ACL rule marshaling helpers
  * rldb: implement rldb_del_rule method
  * rldb: implement rldb_add_rule method
  * rldb: implement rldb_match method
  * npf_rte_acl: enable rte_acl hashtable usage
  * npf_rte_acl: setup rte_acl with counter-id
  * npf: init rldb
  * main: register DPDK's RCU QSBR variable
  * rldb: enable rte_acl rcu support
  * ut: initial rldb API tests
  * ut: avoid priority value 0 in crypto tests
  * ut: rule number becomes mandatory for crypto policies
  * ut: crypto policy rldb cutover preparation
  * ut: send update policy XFRM message
  * cerypto: introduce policy_rule flags
  * crypto: create rldb instances per AF/VRF/dir
  * crypto: avoid rule_tag_ht in feat_attach_by_reqid
  * crypto: prepare policy_rule for rldb cutover
  * crypto: stage policy_prepare_rldb_rule
  * crypto: stage policy_rule_get_rldb
  * crypto: stage policy_rule_add_to_rldb
  * crypto: stage policy_rule_update_rldb
  * crypto: stage policy_rule_remove_from_rldb
  * crypto: stage crypto_policy_rldb_commit
  * crypto: introduce policy_rule pending_add flag
  * crypto: cutover from npf to rldb
  * crypto: drop unused NPF code
  * crypto: discontinue policy-rule tags
  * crypto: drop unused PR-TAG code

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Tue, 26 Jan 2021 11:33:18 +0000

vyatta-dataplane (3.12.21) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * clang: fix variable length array size warnings (Bugfix: VRVDR-54147)
  * npf: avoid returning success during failure (Bugfix: VRVDR-54155)
  * clang: normalize brace usage (Bugfix: VRVDR-54146)
  * rcu: fix compiler errors with pointers and integers (Bugfix: VRVDR-54202)

  [ Derek Fawcus ]
  * ACL: Add new summary bits for actions
  * ACL: Adjust FAL message code for readability
  * ACL: Use new summary bits for encoding new actions
  * GPC: Add represention of parsed mark action
  * ACL: Add helper routines for parsed marking
  * ACL: Parse the qos mark actions
  * GPC: Add QoS actions - set colour / designation

  [ Daniel Gollub ]
  * crypto: avoid dereferecing bad sa pointer

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Fri, 22 Jan 2021 19:20:49 +0000

vyatta-dataplane (3.12.20) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: destroy session in driver from RCU callback

  [ Simon Barber ]
  * Allow for V6 route delete num_paths == 0

  [ Paul Aitken ]
  * DPI: fix nDPI 3.4

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Mon, 18 Jan 2021 08:13:13 +0000

vyatta-dataplane (3.12.19) unstable; urgency=medium

  [ Ian Wilson ]
  * Uninitialised variable in nat64_out_process_common
  * Revert "Update soft_ticks using clock_gettime"
  * Update soft_ticks using clock_gettime (re-factored)
  * cgnat: Change 3-tuple sess and subscriber structs to use unix_epoch_us
  * cgnat: Change port-block start and end times to use unix_epoch_us
  * cgnat: Change sub-sessions to use unix_epoch_us
  * cgnat: Change the clear-session log messages to use unix_epoch_us
  * cgnat: Change max subscriber session timestamps to use unix_epoch_us
  * cgnat: Remove last uses of the cgnat specific time functions

  [ Charles (Chas) Williams ]
  * lag: preserve started state across reconfigure (Bugfix: VRVDR-53928)
  * dpdk_eth_if: add some additional state debugging (Bugfix: VRVDR-53928)

  [ Karthik Murugesan ]
  * Queue depth and WRED threshold configuration enhancement
  * Added range check for time to byte conversion

  [ Paul Aitken ]
  * DPI: engines_len inconsistency

  [ Charles (Chas) Williams ]
  * ip_rt: reject bad rib updates
  * dp_test_mpls: ensure no division by zero
  * clang: re-enable clang checks

  [ Gavin Shearer ]
  * gpc: fix issue of calling create fn instead of delete (Fixes: VRVDR-53959)

  [ Simon Barber ]
  * CRYPTO: Do not set xfrm_direct true
  * CRYPTO: Undo IPSEC breakage caused by clang fix

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Wed, 13 Jan 2021 20:21:22 +0000

vyatta-dataplane (3.12.18) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * clang: fix readability-named-parameter
  * clang: fix readability-inconsistent-declaration-parameter-name
  * tests: fix readability-inconsistent-declaration-parameter-name
  * clang: fix else after return

  [ Nicholas Brown ]
  * Re-enable some clang-tidy checks
  * Remove old CODEOWNERS user

  [ Charles (Chas) Williams ]
  * tests: gre: fix clang-tidy CallAndMessage issues
  * crypto: ensure ctx.context is set to some value
  * clang: quiet warnings about uninitialized usage
  * qos: fix possibly uninitialized values
  * tests: lib: make sure we have a valid mbuf pointer
  * tests: npf: ensure ptree_string2key returns something
  * clang-tidy: re-enable clang-analyzer-core.CallAndMessage

  [ Ian Wilson ]
  * cgnat: Move cgn_addrstr to cgn_log_rte.c and make static
  * cgnat: Move all 'return code' code into cgn_rc.h and cgn_rc.c
  * cgnat: Move time related functions into cgn_time.c and cgn_time.h
  * cgnat: Move cgn_arg_to_int to cgn_cmd_cfg.c
  * cgnat: Replace include of cgn.h with cgn_public.h in ip_icmp.c
  * cgnat: Move function that only exist for unit-tests into cgn_test.c
  * cgnat: Move global variables to cgn.c
  * cgnat: Sessions are only created in outbound context
  * cgnat: Replace 'enum cgn_flow' with 'enum cgn_dir'
  * cgnat: Use 'enum cgn_dir' instead of 'int' for the direction variable
  * cgnat: Remove cgnat cache object cpk_hlen and add cpk_l4_len
  * cgnat: Use a 'cgnat map info' struct to pass data to/from mapping fns
  * cgnat: Use correct type for 'enum nat_proto' vars and params
  * cgnat: Remove direction parameter from session create path
  * cgnat: Change cgn_session_establish to use 'struct cgn_map'
  * cgnat: Move test for sub-session enable out of cgn_session_establish
  * cgnat: Sub-sessions are only created in the outbound context
  * cgnat: Rename cgn_sess2_activate and deactivate to cgn_sess2_add and del
  * Fixup copyright dates for 2021

  [ Charles (Chas) Williams ]
  * ip_rt_protobuf: fix clang deadstore warning
  * controller: check return from add port parse
  * esp: fix deadstore in esp_input
  * qos_sched: fix clang deadstore in parsing
  * npf: remove dead store before enumerated switch
  * pipeline: remove checks in tear downs
  * esp: remove dead store before enumerated switch
  * tests: check ret to avoid dead stores in qos tests
  * tests: fix deadstore in unit tests

  [ Mike Manning ]
  * ARP and ND: entry should not be valid after failure notification
  * ARP: restrict handling of notifications from kernel
  * ARP: remove entry after failure notification

  [ Ian Wilson ]
  * Update soft_ticks using clock_gettime

  [ Derek Fawcus ]
  * GPC: Add policer action to the ACL at FAL API

  [ Nicholas Brown ]
  * command: fix clang deadstore warning
  * dp_test: fix clang deadstore warning
  * npf test: fix clang deadstore warning
  * npf test: remove spurious return
  * clang: Re-enable clang-analyzer-deadcode.DeadStores

  [ Charles (Chas) Williams ]
  * debian: remove libxen dependency

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Mon, 11 Jan 2021 14:12:50 +0000

vyatta-dataplane (3.12.17) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * micro bfd: allow micro BFD packets when no address (Bugfix: VRVDR-46131)
  * main: change to warning about VLAN insertion

  [ Nicholas Brown ]
  * Add .clang-format file
  * Add .editorconfig file

  [ Robert Shearman ]
  * include: update comment comparing SAI with FAL
  * include: add new FAL APIs for using VRF objects with routes
  * fal: don't signal routes with non-main tables to FAL plugins
  * vrf: create VRF FAL object before initialising VRF
  * fal: use new FAL route APIs if supported
  * include: add new FAL APIs for using rtr-intf objects with neighs
  * fal: use new FAL IP neighbor APIs if supported (Fixes: VRVDR-53924)
  * vrf: track and display PD programming state of VRFs

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Mon, 04 Jan 2021 17:08:39 +0000

vyatta-dataplane (3.12.16) unstable; urgency=medium

  [ Nicholas Brown ]
  * Jenkinsfile: clang-tidy robustness

  [ Paul Atkins ]
  * clang: turn off all warnings that are still found when running clang

  [ Charles (Chas) Williams ]
  * clang: fix bugprone-suspicious-string-compare
  * clang: eliminate bzero

  [ Mandeep Rohilla ]
  * LAG: Check to see if min links is configured

  [ Charles (Chas) Williams ]
  * tests: add new macro to fail unit tests
  * tests: convert some static asserts to abort

  [ Nicholas Brown ]
  * Re-enable clang-tidy warnings that are now fixed
  * Fomat .clang-tidy file using yaml continuations

  [ Charles (Chas) Williams ]
  * mlx4: configure default steering mode
  * clang: fix bugprone-narrowing-conversions

  [ Nicholas Brown ]
  * Re-eneable bugprone-suspicious-missing-comma

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Mon, 04 Jan 2021 16:09:52 +0000

vyatta-dataplane (3.12.15) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add NPF codeowners

  [ Ian Wilson ]
  * npf: Split npf_config_default_alloc_free into separate alloc and free
  * npf: Check npf_conf is not NULL before calling rcu callback to free it
  * npf: Free ruleset attach point memory when it is deleted

  [ Derek Fawcus ]
  * GPC: Use ruleset ifname accessor
  * GPC: Add new accessors for rules and groups
  * GPC: Change the ACL FAL layer to the new accessors
  * GPC: Add and use ifp helper functions
  * GPC: Add and use ruleset helper functions
  * ACL: Move ruleset database to GPC layer
  * ACL: Move group database to GPC layer
  * GPC: Add and use rule helpers
  * GPC: Adjust rule notifier helpers
  * ACL: Move rule database to GPC layer
  * GPC: Add per feature logging
  * GPC: Per feature attach/detach
  * GPC: Add attach/detach for ingress QoS

  [ Paul Atkins ]
  * ut: call proper free function to free multicast route
  * ip6_mroute: init the mroute6 stats before populating them

  [ Mandeep Rohilla ]
  * LAG: Distinguish between a member being usable and enabled
  * LAG: Check if the given interface is a member port
  * FAL LAG: Determine if the port is a member of a LAG
  * LAG: Check for member port with the registered lag ops
  * IFOP: Set the usability of an interface
  * IF OP: Set usability of an interface
  * LAG: Set usability of a LAG member
  * FAL LAG: Set LAG member's usability
  * DPDK ETH OP: Set usability of ETH type interface
  * IF STATE: Mark an interface as unusable
  * FAL LAG: Remove member from tx hash when micro BFD down

  [ Simon Barber ]
  * CRYPTO: Add missing return codes on failure paths in sadb
  * UT:CRYPTO Fix timing race between SA and interface creation

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Fri, 18 Dec 2020 15:44:02 +0000

vyatta-dataplane (3.12.14) unstable; urgency=medium

  [ Alan Dewar ]
  * GPC: add debug constants and flag
  * GPC: dummy protobuf handler

  [ Paul Atkins ]
  * ut: tidies to the whole_dp readme file
  * gre: check v6 addresses are equal using the v6 member of the union
  * vxlan: move the FDB functions to allow removal of forward declarations
  * lpm: remove old clang analyzer tags as they are not helpful
  * if: allow multiple node instance callback to be set

  [ Simon Barber ]
  * CRYPTO: Block sending of xfrm acks if the old control is still active

  [ Derek Fawcus ]
  * NPF: Static analysis fixes

  [ Gavin Shearer ]
  * npf: set cache-empty flag after an ICMP host redirect

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Wed, 16 Dec 2020 18:03:40 +0000

vyatta-dataplane (3.12.13) unstable; urgency=medium

  [ Nicholas Brown ]
  * Don't run perform Static Analysis on generated pipeline code
  * enable function complexity checks

  [ Simon Barber ]

 -- Simon Barber <sbarber@mail.eng.vyatta.net>  Tue, 15 Dec 2020 11:02:28 +0000

vyatta-dataplane (3.12.12) unstable; urgency=medium

  [ Mark Gillott ]
  * if: track LAG members when updating multicast promiscuous mode
    (Fixes: VRVDR-53559)

  [ Gavin Shearer ]
  * npf: change ipv6-route show firewall output

  [ Nicholas Brown ]
  * Add a test setup for easy use of valgrind

  [ Robert Shearman ]
  * if: generate events on admin-status changes
  * ip_mcast: make use of dp events to improve modularity
  * bridge: remove admin-down ports from VLANs in the FAL (Fixes: VRVDR-53674)

  [ Nicholas Brown ]
  * ignore corrupt libcheck results files

  [ Paul Atkins ]
  * main: fix memleak in check_broken_firmware
  * ut: free xfrm server endpoints after use

  [ Simon Barber ]
  * CRYPTO: Handle SA netlink messages straight from IKE control-plane
  * CRYPTO: Pass a ptr to a container to rtnl_process_xfrm_sa
  * CRYPTO: Add support for XFRM_GETSA stats service
  * UT:CRYPTO: Add code to test request and process xfrm SA stats
  * CRYPTO: Add SA expire xfrm message generation
  * UT:CRYPTO: Handle xfrm direct SA expire messages

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 14 Dec 2020 14:35:45 +0000

vyatta-dataplane (3.12.11) unstable; urgency=medium

  [ Mandeep Rohilla ]
  * IF EVT: Allow intf type specific context to be passed
  * IF EVT: Add customised initialisation for different int type

  [ Simon Barber ]
  * CRYPTO: Disable xfrm_direct path if xfrms received from vplaned
  * CRYPTO: Pass xfrm_client_aux_data to rtnl_process_xfrm_sa
  * CRYPTO: Add xfrm client flush and commits commands
  * UT:CRYPTO: Add support to crypto for flush & commit cmd from xfrm_server
  * UT:CRYPTO Test new flush command

  [ Mike Manning ]
  * Provide config params for ARP aging time and maximum number of entries
  * Check for ARP cache limit when maximum number of entries exceeded
  * Modify GArp protobuf command from cmd_arp_cfg to garp
  * Convert configuration command for ND to using protobufs
  * Allow configuration of ARP aging time and maximum number of entries
  * ARP dynamic local entries should not be removed due to kernel deletions
  * Extend time to expiry only for locally created proxy entries
  * Minor improvements to lladdr_update() for use by pipelined arp

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 10 Dec 2020 14:09:00 +0000

vyatta-dataplane (3.12.10) unstable; urgency=medium

  [ Paul Atkins ]
  * 3.11.72

  [ Charles (Chas) Williams ]
  * api: clean up public LAG event API
  * lag: handle checks against non-DPDK interfaces

  [ Srinivas Narayan ]
  * Fix bug in bitmask parsing

 -- Srinivas Narayan <narayan@mail.eng.vyatta.net>  Wed, 09 Dec 2020 13:31:08 +0000

vyatta-dataplane (3.12.9) unstable; urgency=medium

  [ Srinivas Narayan ]
  * util: Add API to construct a bitmask from a stream of bytes
  * protobuf: Add protobuf definition for feature affinity
  * affinity: Add dummy command handler for feature affinity
  * crypto: migrate crypto engine set command handling to protobuf
  * crypto: Add protobuf handling for setting crypto-fwd cpus
  * crypto: Emit debug message for forwarding cores being set
  * crypto: Convert fwd queue to multi-consumer

  [ Robert Shearman ]
  * nh_common: ignore path state updates for deleted interfaces
    (Fixes: VRVDR-53541)
  * include: add FAL_INVALID_VRF_ID define

  [ Gavin Shearer ]
  * fal: add FAL attribute for configuring a colour aware policer
  * fal: change COLOR to COLOUR in FAL API enums for consistency
  * fal: change color to colour in fal_qos_map_params_t
  * fal: use decimal instead of hex for for enum values
  * fal: remove commas after and "end" or "max" enum value

  [ Charles (Chas) Williams ]
  * event: expose if_link_change (Bugfix: VRVDR-53783)

  [ Paul Atkins ]
  * bridge: move bridge_timer and related funcs to avoid prototype
  * bridge: remove redundant return
  * protobuf_util: malloc ipv6 addr data as a multiple of bytes
  * mstp: replace assert with static_assert
  * qos: replace assert with static_assert
  * cgn_cmd_cfg: replace assert with static_assert
  * cgn_sess_state: replace assert with static_assert
  * ipv6_rsmbl: replace assert with static_assert
  * cgn_sess2: replace assert with static_assert
  * cgn_session: replace assert with static_assert
  * npf_cache: replace assert with static_assert
  * npf_state: replace assert with static_assert
  * npf_rc: replace assert with static_assert
  * npf_state_tcp: replace assert with static_assert
  * npf_ptree: replace assert with static_assert
  * npf_rproc: replace assert with static_assert
  * l3_tcp_mss: remove unnecessary asserts

  [ Charles (Chas) Williams ]
  * lag: handle first set of min links (Bugfix: VRVDR-53788)

  [ Nicholas Brown ]
  * Jenkinsfile: expose libcheck test result to Jenkins

  [ Dewi Morgan ]
  * mpls: payload_type needed for ip frag handling

  [ Paul Atkins ]
  * dpdk_lag: make pointers that are not modified const
  * iptun_common: make pointers that are not modified const
  * lpm6: make pointers that are not modified const
  * qos_hw: make pointers that are not modified const
  * sfp: make pointers that are not modified const
  * main: make pointers that are not modified const
  * dpi: make pointers that are not modified const
  * ip6_options: make pointers that are not modified const
  * alg_rpc: make pointers that are not modified const
  * cgn_policy: make pointers that are not modified const
  * alg_apt: make pointers that are not modified const
  * npf_nat64: make pointers that are not modified const
  * npf_cidr_util: make pointers that are not modified const
  * npf_rte_acl: make pointers that are not modified const
  * npf_addrgrp: make pointers that are not modified const
  * ut:dp_test_npf_addrgrp: make pointers that are not modified const
  * ut:dp_test_npf_cgnat: make pointers that are not modified const
  * session: make pointers that are not modified const
  * ut:dp_test_lib_exp: make pointers that are not modified const
  * ut:dp_test_lib_intf: make pointers that are not modified const
  * ut:dp_test_pktmbuf_lib: make pointers that are not modified const

  [ Simon Barber ]
  * CRYPTO: Retrieve and store the XFRM clients pull and push socket info
  * CRYPTO:Add Dataplane xfrm client
  * CRYPTO: Add hooks for xfrm_client init
  * UT:CRYPTO Create xfrm server sockets
  * UT:CRYPTO Convert xfrm netlink mesasges to use xfrm server
  * UT:CRYPTO Set message sequence number in xfrm netlink hdr
  * UT:CRYPTO Add xfrm_server ack receive processing
  * UT:CRYPTO Check the number of xfrm acks received
  * CRYPTO: Add support for XFRM ACKs when NPF policies are updated
  * UT:CRYPTO Handle NACKs being returned for incomplete policies
  * CRYPTO:Introduce batch updates from the server
  * UT:CRYPTO: Add msg header to xfrm server messages
  * UT:CRYPTO: Build xfrm UT messages in heap memory
  * UT:CRYPTO: Add a public delete_sa_verify accessor

  [ Charles (Chas) Williams ]
  * clang: remove redundant control flow

  [ Brian Russell ]
  * gpc: add colour awareness to protobuf

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 08 Dec 2020 14:49:50 +0000

vyatta-dataplane (3.12.8) unstable; urgency=medium

  [ Paul Atkins ]
  * 3.11.70

  [ Charles (Chas) Williams ]
  * api: add public api for LAG member FAL object ID (Bugfix: VRVDR-53723)

  [ Nicholas Brown ]
  * UT: Add comment about split in test files
  * Add support for DEB_BUILD_PROFILES="nocheck"
  * Update CODEOWNERS for new meson.build files

  [ Sharmila Podury ]
  * On reboot, disabled bond has members in u/u link state

  [ Paul Atkins ]
  * pl_gen_fused: move print inside of debug check
  * backplane: explicitly compare strcmp result
  * dealer: explicitly compare strcmp result
  * commands: explicitly compare strcmp result
  * control: explicitly compare strcmp result
  * switch: explicitly compare strcmp result
  * fal_lag: explicitly compare strcmp result
  * if: explicitly compare strcmp result
  * mac_limit: explicitly compare strcmp result
  * pd_show: explicitly compare strcmp result
  * pktmbuf: explicitly compare strcmp result
  * qos_sched: explicitly compare strcmp result
  * route_broker: explicitly compare strcmp result
  * rt_tracker: explicitly compare strcmp result
  * storm_ctrl: explicitly compare strcmp result
  * vlan_modify: explicitly compare strcmp result
  * shadow: explicitly compare strcmp result
  * nd6_nbr: explicitly compare strcmp result
  * alg_ftp: explicitly compare strcmp result
  * alg_tftp: explicitly compare strcmp result
  * alg_sip: explicitly compare strcmp result
  * sip_parse: explicitly compare strcmp result
  * sip_translate: explicitly compare strcmp result
  * cgn_cmd_cfg: explicitly compare strcmp result
  * npf_cmd_cfg: explicitly compare strcmp result
  * npf_zone_private: explicitly compare strcmp result
  * l3_v4_route_lookup: explicitly compare strcmp result
  * l3_v6_route_lookup: explicitly compare strcmp result
  * capture: explicitly compare strcmp result
  * ut:dp_test_mac_limit: explicitly compare strcmp result
  * ut:dp_test_npf_nat_lib: explicitly compare strcmp result
  * ut:dp_test_route_broker: explicitly compare strcmp result
  * ut:dp_test_npf_portmap_lib: explicitly compare strcmp result

  [ Srinivas Narayan ]
  * crypto: only emit non-zero counters
  * crypto: Define APIs for post-processing core selection
  * crypto: Allocate/free forwarding core for each SA
  * crypto: allocate/free post-processing queues
  * crypto: Fix bug in index handling
  * crypto: redirect packets to forwarding cores
  * crypto: Emit post crypto forwarding packet stats
  * crypto: redirect packets in batches
  * crypto: set up flag for presence of post-crypto workload

  [ Sharmila Podury ]
  * Refactor code that checks if device is started

  [ Paul Atkins ]
  * mpls_forward: don't use 'else' after an 'if' call returns
  * alg: don't use 'else' after an 'if' call returns
  * sip_parse: don't use 'else' after an 'if' call returns
  * npf_auto_attach: don't use 'else' after an 'if' call returns
  * cgn_session: don't use 'else' after an 'if' call returns
  * npf_cidr_util.c: don't use 'else' after an 'if' call returns
  * npf_addrgrp.c: don't use 'else' after an 'if' call returns
  * npf_cache: don't use 'else' after an 'if' call returns
  * npf_cmd_cfg: don't use 'else' after an 'if' call returns
  * npf_instr: don't use 'else' after an 'if' call returns
  * npf_unpack: don't use 'else' after an 'if' call returns
  * npf_ruleset: don't use 'else' after an 'if' call returns
  * ls_cross_connect_cmd: don't use 'else' after an 'if' call returns
  * l2_ether_forward: don't use 'else' after an 'if' call returns
  * l3_pbr: don't use 'else' after an 'if' call returns
  * l3_v4_gre: don't use 'else' after an 'if' call returns
  * l3_v4_ipsec: don't use 'else' after an 'if' call returns
  * l3_v4_l2tpv3: don't use 'else' after an 'if' call returns
  * l3_v4_out: don't use 'else' after an 'if' call returns
  * l3_v4_post_route_lookup: don't use 'else' after an 'if' call returns
  * l3_v4_udp: don't use 'else' after an 'if' call returns
  * l3_v6_l4: don't use 'else' after an 'if' call returns
  * l3_v6_out: don't use 'else' after an 'if' call returns
  * l3_v6_port_route_lookup: don't use 'else' after an 'if' call returns
  * l3_v6_udp: don't use 'else' after an 'if' call returns
  * capture: don't use 'else' after an 'if' call returns
  * ut:dp_test_npf_addrgroup: don't use 'else' after an 'if' call returns
  * ut:dp_test: don't use 'else' after an 'if' call returns
  * ut:dp_test_json_utils: don't use 'else' after an 'if' call returns
  * ut:dp_test_lib_exp: don't use 'else' after an 'if' call returns
  * ut:dp_test_lib: don't use 'else' after an 'if' call returns
  * ut:dp_test_pktmbuf_lib: don't use 'else' after an 'if' call returns
  * 3.11.71

  [ Simon Barber ]
  * CRYPTO: Tidy Static Analysis Warning
  * CRYPTO: Remove the need for a second peer lookup during SA insertion
  * CRYPTO:UT: Change SADB tests to us incrementing spi and req_id
  * CRYPTO: Change SADB to use tunnel reqid instead of the dest addr
  * Crypto: Rename SADB peer struct
  * CRYPTO: Add peer dest address check into SA lookup

  [ Mandeep Rohilla ]
  * IF API: Api to transmit an L2 frame out of an interface
  * IF API: Api to get the ether address of an interface

  [ Charles (Chas) Williams ]
  * clang: prevent zero length allocation
  * clang: fix redundant expression
  * clang: misplaced widening cast
  * clang: fix possible loss of precision
  * clang: fix uninitialized use of variable
  * clang: fix misc-non-copyable-objects
  * clang: fix promotion to double
  * clang: remove explicit casting
  * clang: fix signed versus unsigned comparisons
  * clang: fix logical not usage
  * clang: remove const qualifier in declaration

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 02 Dec 2020 11:24:52 +0000

vyatta-dataplane (3.12.7) unstable; urgency=medium

  [ Paul Atkins ]
  * json_writer: use same parameter names in prototype and definition
  * config: use same parameter names in prototype and definition
  * event: use same parameter names in prototype and definition
  * flow_cache: use same parameter names in prototype and definition
  * fal_bfd: use same parameter names in prototype and definition
  * fal: use same parameter names in prototype and definition
  * bridge_port: use same parameter names in prototype and definition
  * gre: use same parameter names in prototype and definition
  * if: use same parameter names in prototype and definition
  * in_cksum: use same parameter names in prototype and definition
  * lag: use same parameter names in prototype and definition
  * lpm6: use same parameter names in prototype and definition
  * controller: use same parameter names in prototype and definition
  * main: use same parameter names in prototype and definition
  * qos: use same parameter names in prototype and definition
  * route: use same parameter names in prototype and definition
  * rt_tracker: use same parameter names in prototype and definition
  * vrf: use same parameter names in prototype and definition
  * pl_commands: use same parameter names in prototype and definition
  * pl_node_boot: use same parameter names in prototype and definition
  * crypto_engine: use same parameter names in prototype and definition
  * crypto_pmd: use same parameter names in prototype and definition
  * crypto_policy: use same parameter names in prototype and definition
  * vti: use same parameter names in prototype and definition
  * dpi: use same parameter names in prototype and definition
  * in6: use same parameter names in prototype and definition
  * ip6_icmp: use same parameter names in prototype and definition
  * alg_npf: use same parameter names in prototype and definition
  * app_group_dp.c: don't use 'else' after an 'if' call returns
  * app_group_cmd.c: don't use 'else' after an 'if' call returns
  * protobuf_util: don't use 'else' after an 'if' call returns
  * commands: don't use 'else' after an 'if' call returns
  * debug: don't use 'else' after an 'if' call returns
  * config: don't use 'else' after an 'if' call returns
  * cpp_rate_limiter: don't use 'else' after an 'if' call returns
  * ecmp: don't use 'else' after an 'if' call returns
  * fal: don't use 'else' after an 'if' call returns
  * bridge: don't use 'else' after an 'if' call returns
  * dpdk_eth_linkwatch: don't use 'else' after an 'if' call returns
  * gre: don't use 'else' after an 'if' call returns
  * vxlan: don't use 'else' after an 'if' call returns
  * if: don't use 'else' after an 'if' call returns
  * lag: don't use 'else' after an 'if' call returns
  * l2tpeth_netlink: don't use 'else' after an 'if' call returns
  * lpm: don't use 'else' after an 'if' call returns
  * lpm6: don't use 'else' after an 'if' call returns
  * ip_mroute: don't use 'else' after an 'if' call returns
  * nh_common: don't use 'else' after an 'if' call returns
  * netlink: don't use 'else' after an 'if' call returns
  * qos_obj_db: don't use 'else' after an 'if' call returns
  * qos_ext_buf_monitor: don't use 'else' after an 'if' call returns
  * qos_dpdk: don't use 'else' after an 'if' call returns
  * qos_sched: don't use 'else' after an 'if' call returns
  * route: don't use 'else' after an 'if' call returns
  * rt_commands: don't use 'else' after an 'if' call returns
  * util: don't use 'else' after an 'if' call returns
  * udp_handler: don't use 'else' after an 'if' call returns
  * storm_ctl: don't use 'else' after an 'if' call returns
  * crypto: don't use 'else' after an 'if' call returns
  * crypto_sadb: don't use 'else' after an 'if' call returns
  * vti: don't use 'else' after an 'if' call returns
  * npf_appdb: don't use 'else' after an 'if' call returns
  * npf_typedb: don't use 'else' after an 'if' call returns
  * ip6_mroute: don't use 'else' after an 'if' call returns
  * scope6: don't use 'else' after an 'if' call returns
  * nd6_nbr: don't use 'else' after an 'if' call returns
  * mpls: don't use 'else' after an 'if' call returns
  * route_v6: don't use 'else' after an 'if' call returns
  * mpls_forward: don't use 'else' after an 'if' call returns

  [ Robert Shearman ]
  * storm_control: don't create duplicate policers when reacting to events
    (Fixes: VRVDR-53623)

  [ Paul Atkins ]
  * 3.11.69

  [ Charles (Chas) Williams ]
  * ut: dp_ifnet_iana_type can fail when unit testing

  [ Brian Russell ]
  * gpc: add gpc protobuf

  [ Nicholas Brown ]
  * Jenkinsfile: Build target is now the Halifax

  [ aroberts ]
  * Update dependency on DPDK version for dataplane

  [ Paul Atkins ]
  * Jenkinsfile: Build target is now master for master-next branch
  * alg_npf:  use same parameter names in prototype and definition
  * alg: use same parameter names in prototype and definition
  * cgn_mbuf: use same parameter names in prototype and definition
  * cgn_sess_state: use same parameter names in prototype and definition
  * npf_attach_point: use same parameter names in prototype and definition
  * cgn_session: use same parameter names in prototype and definition
  * pmf_parse: use same parameter names in prototype and definition
  * npf_apm: use same parameter names in prototype and definition
  * npf_instr: use same parameter names in prototype and definition
  * npf_match: use same parameter names in prototype and definition
  * npf_ruleset: use same parameter names in prototype and definition
  * npf_session: use same parameter names in prototype and definition
  * npf_state: use same parameter names in prototype and definition
  * npf_zone_private: use same parameter names in prototype and definition
  * npf_match: use same parameter names in prototype and definition
  * npf_ext_action_grp: use same parameter names in prototype and definition
  * npf_rproc: use same parameter names in prototype and definition
  * session: use same parameter names in prototype and definition
  * shadow: use same parameter names in prototype and definition
  * ut:dp_test_cmd_check: use same parameter names in prototype and definition
  * ut:dp_test_cmd_state: use same parameter names in prototype and definition
  * ut:dp_test_crypto_utils: use same parameter names in prototype and definition
  * ut:dp_test_json_utils: use same parameter names in prototype and definition
  * ut:dp_test_lib: use same parameter names in prototype and definition
  * ut:dp_test_lib_exp: use same parameter names in prototype and definition
  * t:dp_test_libintf: use same parameter names in prototype and definition
  * ut:npf_alg_sip_call: use same parameter names in prototype and definition
  * ut:npf_alg_sip_lib: use same parameter names in prototype and definition
  * ut:firewall_lib: use same parameter names in prototype and definition
  * ut:dp_test_npf_lib: use same parameter names in prototype and definition
  * ut:npf_nat_lib: use same parameter names in prototype and definition
  * ut:dp_test_pktmbuf_lib: use same parameter names in prototype and definition
  * ut:dp_test_qos_lib: use same parameter names in prototype and definition
  * ut:dp_test_session_lib: use same parameter names in prototype and definition
  * ut:fal_plugin_pm: use same parameter names in prototype and definition
  * ut:fal_plugin_test: use same parameter names in prototype and definition
  * ut:fal_plugin_qos: use same parameter names in prototype and definition
  * ut:fal_plugin_ptp: use same parameter names in prototype and definition

  [ Ramkumar Ganapathysubramanian ]
  * New FAL plugin to get L3 Interface attribute
  * Dataplane changes for QoS DSCP remarking

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 25 Nov 2020 09:19:14 +0000

vyatta-dataplane (3.12.6) unstable; urgency=medium

  [ Paul Atkins ]
  * 3.11.67

  [ aroberts ]
  * QOS: Don't drawback TC layer shape rate

  [ Nicholas Brown ]
  * ut: remove unused CLI options
  * ut: expose to testharness the core list dataplane_test passes to DPDK
  * ut: remove cpu relate stuff from dummyfs used by dataplane_test

  [ Paul Atkins ]
  * 3.11.68
  * bridge: increment counters for ucast/nucast on vlans for local traffic

  [ Ian Wilson ]
  * Move next_arg utility function to util.c
  * Rename print_pl_feats to pl_print_feats and move to pl_commands.c
  * Add function to write json for an interface-based pipeline feature
  * Add pipeline show feature commands to l3_v4_out and l3_v6_out
  * Add pipeline show feature commands to l3_v4_out_spath and l3_v6_out_spath
  * Add pipeline show feature commands to l3_v4_encap and l3_v6_encap
  * Add pipeline show feature commands to l3_v4_val and l3_v6_val
  * Add pipeline show feature commands to l2_consume, l2_ether_lookup and l2_local
  * Add pipeline show feature commands to l3_v4_route_lookup and l3_v6_route_lookup
  * Add pipeline show feature commands to global nodes - drop, l4, and udp_in
  * ut: Tests local ICMP pkts with egress ACLs and the originate fw
  * Only pass an output interface pointer to icmp_send_no_route
  * Change ICMP pkts to use ipv4-out-spath pipeline to filter pkts

  [ Robert Shearman ]
  * storm_control: don't create duplicate policers when reacting to events
    (Fixes: VRVDR-53623)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 20 Nov 2020 12:00:03 +0000

vyatta-dataplane (3.12.5) unstable; urgency=medium

  [ Thomas Kiely ]
  * Originated traffic via l2tpv3/ipsec is dropped
  * Remove function which is no longer used

  [ Nicholas Brown ]
  * Install Go protobuf files in correct location

  [ Charles (Chas) Williams ]
  * ptp: allow ports to not exist (yet) (Bugfix: VRVDR-53511)
  * ptp: refactor ptp_find_peer (Bugfix: VRVDR-53511)

  [ Paul Atkins ]
  * 3.11.65

  [ Nicholas Brown ]
  * Removed 'unused-override' warnings
  * Static Analysis as last Jenkins step
  * Allow longer timeout for the slow tests
  * Update docs for meson instead of make

  [ Charles (Chas) Williams ]
  * ptp: rework the peer select logic (Bugfix: VRVDR-53538)
  * ptp: refactor cmd_ptp_op (Bugfix: VRVDR-53538)
  * ptp: add resolver op mode commands (Bugfix: VRVDR-53538)
  * ptp: basic resolver unit test (Bugfix: VRVDR-53538)
  * ptp: routed resolver unit test (Bugfix: VRVDR-53538)
  * ptp: test edge cases in resolver (Bugfix: VRVDR-53538)
  * ptp: ensure sufficient buffer space (Bugfix: VRVDR-53538)

  [ Paul Atkins ]
  * bpf_filter: add parentheses around macro arguments
  * lpm: add parentheses around macro arguments
  * portmonitor_cmds: don't use a macro to determine if a sess is erspan
  * dpi: add parentheses around macro arguments
  * ip6_icmp: add parentheses around macro arguments
  * alg_rpc: add parentheses around macro arguments
  * npf_cidr_util: add parentheses around macro arguments
  * npf_instr: add parentheses around macro arguments
  * npf_nat: add parentheses around macro arguments
  * ut:arp: add parentheses around macro arguments
  * ut:crypto: add parentheses around macro arguments
  * ut:ip6: add parentheses around macro arguments
  * ut:mstp_fwd: add parentheses around macro arguments
  * ut:npf: add parentheses around macro arguments
  * ut:fal_plugin_framer: add parentheses around macro arguments
  * ut:fal_plugin_test: add parentheses around macro arguments

  [ Nicholas Brown ]
  * Don't run clang-tidy on generated protobuf files
  * Add missing dependency on generated files
  * Increase UT timeout

  [ Paul Atkins ]
  * if: rename cmd_pause_show to show_eth_info
  * if: move the showing of the pause state into its own function
  * fal: add api to allow dumping of L2 port state
  * fal_plugin: add a new fal plugin API to dump bfd session state

  [ Daniel Gollub ]
  * l2tpeth: restore VLAN functionatliy on L2TPv3 interfaces

  [ Paul Atkins ]
  * 3.11.66

  [ Alan Dewar ]
  * QOS: period keyword changed to microseconds units (Fixes: VRVDR-53324)

  [ Nicholas Brown ]
  * Add more details on building the UT

  [ Robert Shearman ]
  * storm_ctl: add support for configuring on VLAN subinterfaces
    (Closes: VRVDR-53561)

  [ Charles (Chas) Williams ]
  * lag: add protobuf (Bugfix: VRVDR-52496)
  * lag: add min links support (Bugfix: VRVDR-52496)
  * lag: add events (Bugfix: VRVDR-52496)
  * event: expose if_create/if_delete events (Bugfix: VRVDR-52496)
  * lag: add IANA type (Bugfix: VRVDR-52496)

  [ Ethan Li ]
  * Define Micro BFD FAL attribute

  [ Gavin Shearer ]
  * gpc: add a Provides to ensure FAL builds against correct dataplane
  * fal qos: Add attributes to attach QoS IPv4/IPv6 GPC to i/f
  * fal policer: add support for trTCM policers
  * fal gpc: add actions to set designation, colour, and policer

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 20 Nov 2020 08:57:30 +0000

vyatta-dataplane (3.12.4) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * ptp: avoid dereferencing bad interface pointers (Bugfix: VRVDR-53517)

  [ Paul Atkins ]
  * 3.11.60

  [ Robert Shearman ]
  * nh_common: fix hash key during nexthop hash del & add
  * route_flags: ignore RTF_UNUSABLE for nexthop comparison (Fixes: VRVDR-53512)

  [ Derek Fawcus ]
  * NPF: Remove some stale code, to allow flexibility
  * pipeline: use 'out node' for IPv4 mcast ethernet
  * pipeline: use 'out node' for IPv6 mcast ethernet
  * multicast: Clean up punt handling for unsup tuns
  * multicast: Use 'out node' for IPv4/IPv6 VTI output
  * multicast: Use 'out node' for IPv4/IPv6 P2P GRE tx
  * multicast: Move TTL decrement during forward
  * multicast: Move OIL replication counts
  * multicast: Rename an interface variable
  * multicast: Do not replicate to a DOWN interface
  * multicast: Move pipeline walk logic

  [ Ian Wilson ]
  * ut: Test egress ACLs with IPv4 and IPv6 multicast forwarding

  [ Paul Atkins ]
  * 3.11.61

  [ Nicholas Brown ]
  * platform.conf can be static

  [ Paul Atkins ]
  * 3.11.62

  [ Ian Wilson ]
  * ut: Export functions to build and tear-down a GRE tunnel
  * ut: Test sw egress ACLs with GRE tunnels

  [ Robert Shearman ]
  * ecmp: remove unused "max-paths" option (Fixes: VRVDR-52393)

  [ Paul Atkins ]
  * 3.11.63

  [ Ian Wilson ]
  * ut: Add function to wait for multicast route

  [ Paul Atkins ]
  * 3.11.64

  [ Mike Manning ]
  * Dynamic entries in ND cache should not be deleted unless stale

  [ Nicholas Brown ]
  * Meson build support (Closes: VRVDR-52941)
  * Change hard-coded UT paths
  * Add clang-tidy Static Analysis support to Jenkinsfile
  * Remove autotools build support
  * Define individual meson tests for each CK test suite

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 09 Nov 2020 13:31:07 +0000

vyatta-dataplane (3.12.3) unstable; urgency=medium

  [ Nicholas Brown ]
  * Clarify UT path redirection code

  [ Ian Wilson ]
  * npf: Rename 'typedef enum TCP_STATES' to 'enum tcp_session state'
  * npf: Rename npf_tcpstate_t to struct npf_tcp_window
  * npf: Replace nst_tcpst with nst_tcp_win in npf_state_t
  * npf: Pack enum dp_session_state so that is used 1 byte instead of 2
  * npf: Add npf_state_tcp2gen to determine generic state from tcp state
  * npf: Pack enum npf_proto_idx.  Use the enum instead of a uint8_t
  * npf: Add separate log functions for TCP and everything else
  * npf: Add separate state change functions for TCP and everything else
  * npf: Add separate state pack update functions for TCP and other
  * npf: Add separate functions for connsync update/restore of session state
  * npf: Move spinlocks into npf_state_npf_pack_update_xxx fns
  * npf: Use separate state inspect functions for TCP, ICMP, and other
  * npf: Use separate connsync state update functions for TCP and other
  * npf: Add a union to npf_state_t for the different state types
  * npf: Add separate function for session close for TCP and other
  * npf: Rename npf_state_tcp_state_set and npf_state_generic_state_set
  * npf: Remove TCP session states that were outside the enum
  * npf: Change TCP sessions to use nst_tcp_state instead of nst_state
  * npf: Change TCP strict FSM to be a lookup table to return a boolean
  * npf: npf_state_update_session_state replaced
  * npf: npf_timeout_get replaced
  * npf: Session state stats defines replaced with inline functions
  * npf: npf_map_str_to_generic_state replaced with dp_session_name2state
  * npf: vrf creation moved from npf_timeout_set to cmd_npf_global_timeout
  * npf: non-TCP sessions changed to use nst_gen_state instead of nst_state
  * npf: union of nst_tcp_state and nst_gen_state removed from npf_state_t
  * npf: Changes to sess limit rproc to use generic session state
  * npf: Defines NPF_SET_SESSION_LOG_FLAG etc. replaced with functions
  * npf: Renamed functions that return session state name
  * npf: npf_pack_session_state changed to include union of state types
  * npf: 'struct session' pointer passed into npf_session_update_state
  * npf: npf_session_t pointer passed into npf_state_inspect
  * npf: npf_tcp_state_is_closed fn removed
  * npf: Changes to connsync functions to pack and update session state

  [ Nachiketa Prachanda ]
  * fix use after free on events unregistration
  * api: interface event notifications to plugins

  [ Paul Atkins ]
  * 3.11.44
  * portmonitor_cmds: remove the code to handle out of order cfg

  [ Charles (Chas) Williams ]
  * ptp: handle unavailable interface vlan mappings (Bugfix: VRVDR-53372)

  [ Paul Atkins ]
  * 3.11.45

  [ Gavin Shearer ]
  * fal acl: use rule number attr instead of priority in rules

  [ Paul Atkins ]
  * 3.11.46

  [ Srinivas Narayan ]
  * Include shadow ring in buffer count calculations
  * Increase slowpath receive ring size

  [ Paul Atkins ]
  * 3.11.46

  [ Srinivas Narayan ]
  * crypto: store out_ethertype in context
  * crypto: store out_hdr_len in context
  * crypto: re-order fields in crypto_pkt_ctx
  * crypto: store udp encap length in SA to simplify code
  * crypto: include DPDK driver stats in output
  * crypto: Pass packet burst to ESP
  * crypto: Move bad mbufs to end of context array
  * crypto: Pass a batch of packets to the PMD
  * crypto: Allocate crypto ops when crypto pkt buffer is set up
  * crypto: pass batches of packets to ESP encrypt functions
  * crypto: Pass batches of packets to ESP decrypt functions
  * crypto: Remove debug error messages in some places
  * crypto: pass errors from PMD operations to higher layers
  * crypto: remove unnecessary check & error
  * crypto: Add error counters for failures
  * crypto: Set action to drop if packet has not been processed
  * crypto: Prefetch batches of context pointers for processing
  * crypto: Fetch data in first mbuf into L2 cache
  * crypto: Prefetch contexts into L2 cache
  * crypto: add inline implementation to grow buffer
  * crypto: Invoke rte_pktmbuf_lastseg only for multi-seg pkts

  [ Paul Atkins ]
  * 3.11.47

  [ Ian Wilson ]
  * ut: Verify that ipv4-orig-feat feature is enabled
  * npf: NPF_RS_FLAG_FEAT_GBL renamed to NPF_RS_FLAG_FEAT_INTF_ALL
  * npf: Move check of NPF_RS_FLAG_FEAT_INTF_ALL from npf_gbl_rs_count_incr
  * npf: Enable feature on all interfaces for rulesets attached to global
  * npf: Separate enabling of defrag-out and defrag-out-spath

  [ Paul Atkins ]
  * 3.11.48

  [ Ian Wilson ]
  * ut: Tests egress ACL on a pppoe interface
  * ut: Tests egress ACL on a bridge interface

  [ Paul Atkins ]
  * 3.11.49

  [ Nicholas Brown ]
  * Move IGNORE_SANITIZER to compiler.h

  [ Paul Atkins ]
  * 3.11.50

  [ Thomas Kiely ]
  * Update S2S UT infra for multiple V4 policies
  * Add V4 test to ensure correct policy match for proto
  * ACL V4 rule setup does not handle discrete protocol
  * Update S2S UT infra for multiple V6 policies
  * Add V6 test to ensure correct policy match for proto
  * ACL V6 rule setup does not handle discrete protocol

  [ Paul Atkins ]
  * 3.11.51

  [ Srinivas Narayan ]
  * crypto: save bytes from each batch for use as IVs
  * crypto: add return value check for engine init
  * crypto: remove unused functions

  [ Paul Atkins ]
  * 3.11.52
  * lpm: change lpm walker to take a struct of params
  * lpm: allow the callers of lpm_walk to kick the trackers for a rule
  * route: call the route trackers after updating the fal l3 state
  * lpm6: change lpm6 walker to take a struct of params
  * lpm6: allow the callers of lpm6_walk to kick the trackers for a rule
  * route6: call the route trackers after updating the fal l3 state
  * 3.11.53

  [ Ian Wilson ]
  * ut: Add functions to enable multicast fwding and to add multicast route
  * ut: Add test for multicast forwarding in the dataplane

  [ Paul Atkins ]
  * 3.11.54

  [ Srinivas Narayan ]
  * crypto: tune op and session pool sizes

  [ Paul Atkins ]
  * 3.11.55

  [ Srinivas Narayan ]
  * crypto: prefetch fields in ctx in encrypt path
  * crypto: Include current index in prefetch
  * crypto: prefetch IVs to be used in encryption
  * crypto: prefetch ops

  [ Paul Atkins ]
  * 3.11.56

  [ Ian Wilson ]
  * ut: Add test for IPv6 multicast forwarding in the dataplane

  [ Paul Atkins ]
  * 3.11.57

  [ Derek Fawcus ]
  * NPF: Rename npc_next_proto to npc_proto_final
  * NPF: Rename 'PROTO' opcode to 'PROTO_FINAL'
  * NPF: Add matching against IP header protocol field
  * NPF: Report proto-final in rule output

  [ Nicholas Brown ]
  * Depend on librte-meta-allpmds

  [ Paul Atkins ]
  * 3.11.58

  [ Ian Wilson ]
  * npf: Local traffic, including IPv6 ND/NA, may be dropped by zone fw
  * ut: Test IPv6 nbr egress in the presence of zones firewall

  [ Paul Atkins ]
  * 3.11.59

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 03 Nov 2020 11:51:01 +0000

vyatta-dataplane (3.12.2) unstable; urgency=medium

  [ Nicholas Brown ]
  * Remove no_extra_tests DEB_BUILD_OPTIONS
  * Add debian packaging directory to .gitignore
  * More specific include path libvyattafal pkgconfig

  [ Charles (Chas) Williams ]
  * ptp: refactor into ptp_peer_dst_lookup (Bugfix: VRVDR-53302)
  * ptp: refactor into ptp_peer_dst_resolve (Bugfix: VRVDR-53302)
  * ptp: group peers by IP address (Bugfix: VRVDR-53302)
  * ptp: refactor into ptp_peer_find_nexthop (Bugfix: VRVDR-53302)
  * ptp: select best route for peer (Bugfix: VRVDR-53302)

  [ Paul Atkins ]
  * 3.11.40
  * vhost: remove the code to handle out of order cfg for vhost
  * 3.11.41

  [ Ian Wilson ]
  * npf: Check ingress and egress features when deciding to return ACL stats
  * acl: Egress ACL in s/w path will not match dp originated IPv6 ND traffic
  * ipv6_originate_filter made static

  [ Paul Atkins ]
  * 3.11.42

  [ Charles (Chas) Williams ]
  * ptp: get sibling ifp and nexthop during iteration (Bugfix: VRVDR-53302)
  * ptp: prefer peers with reachability (Bugfix: VRVDR-53302)

  [ Paul Atkins ]
  * commands: remove the code to handle out of order cfg for poe
  * 3.11.43

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 14 Oct 2020 10:02:17 +0100

vyatta-dataplane (3.12.1) unstable; urgency=medium

  [ Robert Shearman ]
  * protobuf: add Path message fields for recursive labels

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 12 Oct 2020 09:20:52 +0100

vyatta-dataplane (3.11.72) unstable; urgency=medium

  [ Robert Shearman ]
  * nh_common: ignore path state updates for deleted interfaces
    (Fixes: VRVDR-53541)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 07 Dec 2020 08:29:00 +0000

vyatta-dataplane (3.11.71) unstable; urgency=medium

  [ Sharmila Podury ]
  * On reboot, disabled bond has members in u/u link state
  * Refactor code that checks if device is started

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 01 Dec 2020 13:50:58 +0000

vyatta-dataplane (3.11.70) unstable; urgency=medium

  [ Nicholas Brown ]
  * Jenkinsfile: Build target is now the Halifax

  [ aroberts ]
  * Update dependency on DPDK version for dataplane

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 24 Nov 2020 09:53:18 +0000

vyatta-dataplane (3.11.69) unstable; urgency=medium

  [ Robert Shearman ]
  * storm_control: don't create duplicate policers when reacting to events
    (Fixes: VRVDR-53623)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 23 Nov 2020 08:22:52 +0000

vyatta-dataplane (3.11.68) unstable; urgency=medium

  [ aroberts ]
  * QOS: Don't drawback TC layer shape rate

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 20 Nov 2020 09:08:32 +0000

vyatta-dataplane (3.11.67) unstable; urgency=medium

  [ Alan Dewar ]
  * QOS: period keyword changed to microseconds units (Fixes: VRVDR-53324)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 17 Nov 2020 10:16:43 +0000

vyatta-dataplane (3.11.66) unstable; urgency=medium

  [ Daniel Gollub ]
  * l2tpeth: restore VLAN functionatliy on L2TPv3 interfaces

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 17 Nov 2020 09:20:52 +0000

vyatta-dataplane (3.11.65) unstable; urgency=medium

  [ Thomas Kiely ]
  * Originated traffic via l2tpv3/ipsec is dropped
  * Remove function which is no longer used

  [ Charles (Chas) Williams ]
  * ptp: allow ports to not exist (yet) (Bugfix: VRVDR-53511)
  * ptp: refactor ptp_find_peer (Bugfix: VRVDR-53511)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 10 Nov 2020 09:03:48 +0000

vyatta-dataplane (3.11.64) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Add function to wait for multicast route

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 05 Nov 2020 13:56:12 +0000

vyatta-dataplane (3.11.63) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Export functions to build and tear-down a GRE tunnel
  * ut: Test sw egress ACLs with GRE tunnels

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 05 Nov 2020 13:29:08 +0000

vyatta-dataplane (3.11.62) unstable; urgency=medium

  [ Nicholas Brown ]
  * platform.conf can be static

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 04 Nov 2020 12:39:24 +0000

vyatta-dataplane (3.11.61) unstable; urgency=medium

  [ Robert Shearman ]
  * nh_common: fix hash key during nexthop hash del & add
  * route_flags: ignore RTF_UNUSABLE for nexthop comparison (Fixes: VRVDR-53512)

  [ Derek Fawcus ]
  * NPF: Remove some stale code, to allow flexibility
  * pipeline: use 'out node' for IPv4 mcast ethernet
  * pipeline: use 'out node' for IPv6 mcast ethernet
  * multicast: Clean up punt handling for unsup tuns
  * multicast: Use 'out node' for IPv4/IPv6 VTI output
  * multicast: Use 'out node' for IPv4/IPv6 P2P GRE tx
  * multicast: Move TTL decrement during forward
  * multicast: Move OIL replication counts
  * multicast: Rename an interface variable
  * multicast: Do not replicate to a DOWN interface
  * multicast: Move pipeline walk logic

  [ Ian Wilson ]
  * ut: Test egress ACLs with IPv4 and IPv6 multicast forwarding

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 04 Nov 2020 12:37:28 +0000

vyatta-dataplane (3.11.60) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * ptp: avoid dereferencing bad interface pointers (Bugfix: VRVDR-53517)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 03 Nov 2020 13:00:25 +0000

vyatta-dataplane (3.11.59) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Local traffic, including IPv6 ND/NA, may be dropped by zone fw
  * ut: Test IPv6 nbr egress in the presence of zones firewall

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 03 Nov 2020 09:06:14 +0000

vyatta-dataplane (3.11.58) unstable; urgency=medium

  [ Derek Fawcus ]
  * NPF: Rename npc_next_proto to npc_proto_final
  * NPF: Rename 'PROTO' opcode to 'PROTO_FINAL'
  * NPF: Add matching against IP header protocol field
  * NPF: Report proto-final in rule output

  [ Nicholas Brown ]
  * Depend on librte-meta-allpmds

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 02 Nov 2020 15:41:08 +0000

vyatta-dataplane (3.11.57) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Add test for IPv6 multicast forwarding in the dataplane

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 29 Oct 2020 08:54:47 +0000

vyatta-dataplane (3.11.56) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: prefetch fields in ctx in encrypt path
  * crypto: Include current index in prefetch
  * crypto: prefetch IVs to be used in encryption
  * crypto: prefetch ops

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 28 Oct 2020 11:51:25 +0000

vyatta-dataplane (3.11.55) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: tune op and session pool sizes

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 28 Oct 2020 08:11:57 +0000

vyatta-dataplane (3.11.54) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Add functions to enable multicast fwding and to add multicast route
  * ut: Add test for multicast forwarding in the dataplane

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 27 Oct 2020 08:35:24 +0000

vyatta-dataplane (3.11.53) unstable; urgency=medium

  * lpm: change lpm walker to take a struct of params
  * lpm: allow the callers of lpm_walk to kick the trackers for a rule
  * route: call the route trackers after updating the fal l3 state
  * lpm6: change lpm6 walker to take a struct of params
  * lpm6: allow the callers of lpm6_walk to kick the trackers for a rule
  * route6: call the route trackers after updating the fal l3 state

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 26 Oct 2020 13:21:18 +0000

vyatta-dataplane (3.11.52) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: save bytes from each batch for use as IVs
  * crypto: add return value check for engine init
  * crypto: remove unused functions

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 26 Oct 2020 09:45:57 +0000

vyatta-dataplane (3.11.51) unstable; urgency=medium

  [ Thomas Kiely ]
  * Update S2S UT infra for multiple V4 policies
  * Add V4 test to ensure correct policy match for proto
  * ACL V4 rule setup does not handle discrete protocol
  * Update S2S UT infra for multiple V6 policies
  * Add V6 test to ensure correct policy match for proto
  * ACL V6 rule setup does not handle discrete protocol

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 23 Oct 2020 10:09:01 +0100

vyatta-dataplane (3.11.50) unstable; urgency=medium

  [ Nicholas Brown ]
  * Move IGNORE_SANITIZER to compiler.h

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 23 Oct 2020 09:05:58 +0100

vyatta-dataplane (3.11.49) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Tests egress ACL on a pppoe interface
  * ut: Tests egress ACL on a bridge interface

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 22 Oct 2020 08:18:20 +0100

vyatta-dataplane (3.11.48) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: Verify that ipv4-orig-feat feature is enabled
  * npf: NPF_RS_FLAG_FEAT_GBL renamed to NPF_RS_FLAG_FEAT_INTF_ALL
  * npf: Move check of NPF_RS_FLAG_FEAT_INTF_ALL from npf_gbl_rs_count_incr
  * npf: Enable feature on all interfaces for rulesets attached to global
  * npf: Separate enabling of defrag-out and defrag-out-spath

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 21 Oct 2020 16:34:35 +0100

vyatta-dataplane (3.11.47) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: store out_ethertype in context
  * crypto: store out_hdr_len in context
  * crypto: re-order fields in crypto_pkt_ctx
  * crypto: store udp encap length in SA to simplify code
  * crypto: include DPDK driver stats in output
  * crypto: Pass packet burst to ESP
  * crypto: Move bad mbufs to end of context array
  * crypto: Pass a batch of packets to the PMD
  * crypto: Allocate crypto ops when crypto pkt buffer is set up
  * crypto: pass batches of packets to ESP encrypt functions
  * crypto: Pass batches of packets to ESP decrypt functions
  * crypto: Remove debug error messages in some places
  * crypto: pass errors from PMD operations to higher layers
  * crypto: remove unnecessary check & error
  * crypto: Add error counters for failures
  * crypto: Set action to drop if packet has not been processed
  * crypto: Prefetch batches of context pointers for processing
  * crypto: Fetch data in first mbuf into L2 cache
  * crypto: Prefetch contexts into L2 cache
  * crypto: add inline implementation to grow buffer
  * crypto: Invoke rte_pktmbuf_lastseg only for multi-seg pkts

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 21 Oct 2020 09:14:31 +0100

vyatta-dataplane (3.11.46) unstable; urgency=medium

  [ Gavin Shearer ]
  * fal acl: use rule number attr instead of priority in rules

  [ Paul Atkins ]
  * Include shadow ring in buffer count calculations
  * Increase slowpath receive ring size

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 20 Oct 2020 10:07:06 +0100

vyatta-dataplane (3.11.45) unstable; urgency=medium

  [ Paul Atkins ]
  * portmonitor_cmds: remove the code to handle out of order cfg

  [ Charles (Chas) Williams ]
  * ptp: handle unavailable interface vlan mappings (Bugfix: VRVDR-53372)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 16 Oct 2020 09:52:15 +0100

vyatta-dataplane (3.11.44) unstable; urgency=medium

  [ Nicholas Brown ]
  * Clarify UT path redirection code

  [ Ian Wilson ]
  * npf: Rename 'typedef enum TCP_STATES' to 'enum tcp_session state'
  * npf: Rename npf_tcpstate_t to struct npf_tcp_window
  * npf: Replace nst_tcpst with nst_tcp_win in npf_state_t
  * npf: Pack enum dp_session_state so that is used 1 byte instead of 2
  * npf: Add npf_state_tcp2gen to determine generic state from tcp state
  * npf: Pack enum npf_proto_idx.  Use the enum instead of a uint8_t
  * npf: Add separate log functions for TCP and everything else
  * npf: Add separate state change functions for TCP and everything else
  * npf: Add separate state pack update functions for TCP and other
  * npf: Add separate functions for connsync update/restore of session state
  * npf: Move spinlocks into npf_state_npf_pack_update_xxx fns
  * npf: Use separate state inspect functions for TCP, ICMP, and other
  * npf: Use separate connsync state update functions for TCP and other
  * npf: Add a union to npf_state_t for the different state types
  * npf: Add separate function for session close for TCP and other
  * npf: Rename npf_state_tcp_state_set and npf_state_generic_state_set
  * npf: Remove TCP session states that were outside the enum
  * npf: Change TCP sessions to use nst_tcp_state instead of nst_state
  * npf: Change TCP strict FSM to be a lookup table to return a boolean
  * npf: npf_state_update_session_state replaced
  * npf: npf_timeout_get replaced
  * npf: Session state stats defines replaced with inline functions
  * npf: npf_map_str_to_generic_state replaced with dp_session_name2state
  * npf: vrf creation moved from npf_timeout_set to cmd_npf_global_timeout
  * npf: non-TCP sessions changed to use nst_gen_state instead of nst_state
  * npf: union of nst_tcp_state and nst_gen_state removed from npf_state_t
  * npf: Changes to sess limit rproc to use generic session state
  * npf: Defines NPF_SET_SESSION_LOG_FLAG etc. replaced with functions
  * npf: Renamed functions that return session state name
  * npf: npf_pack_session_state changed to include union of state types
  * npf: 'struct session' pointer passed into npf_session_update_state
  * npf: npf_session_t pointer passed into npf_state_inspect
  * npf: npf_tcp_state_is_closed fn removed
  * npf: Changes to connsync functions to pack and update session state

  [ Nachiketa Prachanda ]
  * fix use after free on events unregistration
  * api: interface event notifications to plugins

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 14 Oct 2020 15:50:34 +0100

vyatta-dataplane (3.11.43) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * ptp: get sibling ifp and nexthop during iteration (Bugfix: VRVDR-53302)
  * ptp: prefer peers with reachability (Bugfix: VRVDR-53302)

  [ Paul Atkins ]
  * commands: remove the code to handle out of order cfg for poe

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 14 Oct 2020 08:31:05 +0100

vyatta-dataplane (3.11.42) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Check ingress and egress features when deciding to return ACL stats
  * acl: Egress ACL in s/w path will not match dp originated IPv6 ND traffic
  * ipv6_originate_filter made static

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 13 Oct 2020 14:12:35 +0100

vyatta-dataplane (3.11.41) unstable; urgency=medium

  * vhost: remove the code to handle out of order cfg for vhost

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 13 Oct 2020 10:34:16 +0100

vyatta-dataplane (3.11.40) unstable; urgency=medium

  [ Nicholas Brown ]
  * Remove no_extra_tests DEB_BUILD_OPTIONS
  * Add debian packaging directory to .gitignore
  * More specific include path libvyattafal pkgconfig

  [ Charles (Chas) Williams ]
  * ptp: refactor into ptp_peer_dst_lookup (Bugfix: VRVDR-53302)
  * ptp: refactor into ptp_peer_dst_resolve (Bugfix: VRVDR-53302)
  * ptp: group peers by IP address (Bugfix: VRVDR-53302)
  * ptp: refactor into ptp_peer_find_nexthop (Bugfix: VRVDR-53302)
  * ptp: select best route for peer (Bugfix: VRVDR-53302)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 13 Oct 2020 09:56:41 +0100

vyatta-dataplane (3.11.39) unstable; urgency=medium

  [ Ramesh Devarajan ]
  * capture: Print dropped frames count

  [ Paul Atkins ]
  * capture: compare fal obj against FAL_NULL_OBJECT_ID instead of NULL

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 08 Oct 2020 11:30:41 +0100

vyatta-dataplane (3.11.38) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * dpdk: add ConnectX-6 support to vplane-uio

  [ Paul Atkins ]
  * backplane: add comment about why command replay is needed
  * backplane: check that the FILE ptr is set in the command handler
  * rt_commands: remove the code to handle out of order cfg for garp
  * commands: remove the code to handle out of order cfg for switchport

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 07 Oct 2020 08:54:45 +0100

vyatta-dataplane (3.11.37) unstable; urgency=medium

  [ Nicholas Brown ]
  * Update exported symbols from fal test plugin
  * Use visibility attribute for symbols
  * Use __FOR_EXPORT instead of __externally_visible

  [ Robert Shearman ]
  * mpls: fix crash when displaying PD subset data
  * pd_show: allow showing objects in state full as well
  * mpls: fix output of PD subset state (Fixes: VRVDR-53208)

  [ Ian Wilson ]
  * ut: Add test for sw acl with fragmented IPv4 pkt on output
  * ut: Add test for sw acl with fragmented IPv6 pkt on output
  * npf: Set address family in ruleset when grouper is not initialized

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 02 Oct 2020 14:54:03 +0100

vyatta-dataplane (3.11.36) unstable; urgency=medium

  [ Ian Wilson ]
  * ut: dpt_udp and dpt_tcp enhanced to support IPv6
  * ut: Basic ingress software ACL tests enhanced to include TCP and UDP
  * ut: Add egress software ACL tests
  * ut: Add tests for sw ACLs on the ip_lookup_and_originate output path
  * ut: Add tests for sw ACLs for pkts originated from the router (spath)
  * Create ipv4-out-spath pipeline node
  * Create ipv6-out-spath pipeline node

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 01 Oct 2020 08:34:29 +0100

vyatta-dataplane (3.11.35) unstable; urgency=medium

  * Revert "dp_test: remove undefined functions from headers"
  * Revert "ut: remove unused code in dp_test_npf_sess_lib"

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 29 Sep 2020 11:28:22 +0100

vyatta-dataplane (3.11.34) unstable; urgency=medium

  [ Nicholas Brown ]
  * Treat ndpi dependency like other dependencies
  * Use pkgconfig macro variables for protobuf
  * Move all test code to single directory

  [ Nachiketa Prachanda ]
  * dp_test: remove undefined functions from headers
  * rename dpt_session_counters
  * dp_test: export dpt_session_counters function

  [ Paul Atkins ]
  * npf: remove unused code from alg/alg_apt.c
  * npf: remove unused code from cgnat/cgn_session.c
  * npf: remove unused code from cgnat/cgn_sess_state.c
  * npf: remove unused code from cgnat/cgn_log.c
  * npf: remove unused code from cgnat/cgn_policy.c
  * npf: remove unused code from config/npf_attach_point.c
  * npf: remove unused code from config/pmf_att_rlgrp.c
  * npf: remove unused code from config/pmf_parse.c
  * npf: remove unused code from dpi/npf_typedb.c
  * npf: remove unused code from nat/nat_pool_event.c
  * npf: remove unused code from zones/npf_zone_private.c
  * npf: remove unused code from npf_vrf.c
  * npf: remove unused code from npf_tblset.c
  * npf: remove unused code from npf_cache.c
  * npf: remove unused code from npf_nat.c
  * npf: remove unused code from npf_nat64.c
  * npf: remove unused code from npf_processor.c
  * npf: remove unused code from npf_state_tcp.c
  * npf: remove unused code from npf_disassemble.c
  * npf: remove unused code from npf_session.c

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 29 Sep 2020 09:07:41 +0100

vyatta-dataplane (3.11.33) unstable; urgency=medium

  [ Nicholas Brown ]
  * remove config for cpputest
  * Don't check DPDK port size
  * Require a recent openssl version
  * Don't set cpu arch in attempt to match DPDK
  * PACKAGE_VERSION is already defined in build_config.h

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 28 Sep 2020 10:12:48 +0100

vyatta-dataplane (3.11.32) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * debian: cleanup .postinst script (Bugfix: VRVDR-53193)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 25 Sep 2020 08:14:15 +0100

vyatta-dataplane (3.11.31) unstable; urgency=medium

  [ Robert Shearman ]
  * if: remove unnecessary name hash insert during hwport init
  * if: move allocation of DPDK ethernet interfaces to dpdk_eth_if.c
    (Closes: VRVDR-53058)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 24 Sep 2020 15:29:41 +0100

vyatta-dataplane (3.11.30) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: set ICV offset correctly for multi-segment packets
  * crypto: Initialize status to avoid spurious drops

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 24 Sep 2020 15:05:14 +0100

vyatta-dataplane (3.11.29) unstable; urgency=medium

  [ Paul Aitken ]
  * DPI: fix appFW "ten packets" functionality
  * DPI: make appFW cognisant of engine ID

  [ Ian Wilson ]
  * npf: Initialisation of config ht moved out of npf_make_rule
  * npf: Parse special ACL group-attribute rule if present
  * npf: Skip ruleset inspection for address-family if not enabled on group
  * ut: Add simple software ACL tests

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 21 Sep 2020 07:55:22 +0100

vyatta-dataplane (3.11.28) unstable; urgency=medium

  [ Paul Atkins ]
  * ipv6: remove unused code from nd6_nbr.c
  * if: remove unused code from if.c
  * if: remove unused code from bridge/bridge_port.c
  * crypto: remove unused code from crypto_policy.c
  * crypto: remove unused code from crypto_engine.c
  * commands: remove unused code from commands.c
  * arp: remove unused code from arp.c

  [ Ian Wilson ]
  * npf: Filter and sort sessions by NAT translation address or port

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 18 Sep 2020 16:43:48 +0100

vyatta-dataplane (3.11.27) unstable; urgency=medium

  * commands: remove the code to handle out of order cfg for speed
  * storm_ctl: remove the code to handle out of order cfg

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 17 Sep 2020 13:11:51 +0100

vyatta-dataplane (3.11.26) unstable; urgency=medium

  * ut: remove dp_test_lib_cmd as the code in it is not used
  * ut: remove unused code in dp_test_netlink_state.c
  * ut: remove unused code in dp_test_qos_lib.c
  * ut: remove unused code in dp_test_str.c
  * ut: remove unused code in dp_test_console.c
  * ut: remove unused code in dp_test_lib.c
  * ut: remove unused code in dp_test_lib_intf.c

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 16 Sep 2020 09:40:24 +0100

vyatta-dataplane (3.11.25) unstable; urgency=medium

  * npf: remove the code in src/npf/alg/apt as it is not used
  * ut: remove unused code in dp_test_npf_alg_sip_lib
  * ut: remove unused code in dp_test_npf_alg_sip_call
  * ut: remove unused code in dp_test_npf_alg_sip_parse
  * ut: remove unused code in dp_test_npf_alg_lib
  * ut: remove unused code in dp_test_npf_lib
  * ut: remove unused code in dp_test_npf_sess_lib
  * ut: remove unused code in dp_test_session_internal_lib
  * ut: remove unused code in dp_test_npf_nat_lib
  * ut: remove unused code in dp_test_npf_fw_lib
  * ut: remove unused code in dp_test_npf_portmap_lib

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 15 Sep 2020 13:41:22 +0100

vyatta-dataplane (3.11.24) unstable; urgency=medium

  [ Paul Aitken ]
  * NPF: prevent possible null deref

  [ Gavin Shearer ]
  * cgn: add locking when sending logs ZMQ

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 15 Sep 2020 13:37:16 +0100

vyatta-dataplane (3.11.23) unstable; urgency=medium

  * zmq_dp: remove unused code
  * dealer: remove unused code
  * ut: remove unused code in dp_test_crypto_utils
  * ut: remove unused code in dp_test_lib_intf
  * ut: remove unused code in dp_test_netlink_state
  * ut: remove unused code in dp_test_qos_lib
  * vxlan: remove unused code
  * vti: remove unused code
  * qos_sched: remove unused code
  * nsh: remove unused code

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 14 Sep 2020 14:14:45 +0100

vyatta-dataplane (3.11.22) unstable; urgency=medium

  [ Gavin Shearer ]
  * npf: ensure cache ptr set if grouper/rule processing
  * npf: check IPv4/v6 proto before accessing cached protocol
  * npf: add check to npf_remark_dscp for non-IP packets
  * npf: update npf_cache_all() to not convert failures to success
  * npf: init cache IP addresses pointer to NULL for embedded pkts
  * npf: enable test for a bad embedded ICMP error packet
  * npf: remove double space from "from  npf"

  [ Philip Downey ]
  * MCAST Avoid deferencing unitialised fal RFP object (Fixes: VRVDR-46304)

  [ Thomas Kiely ]
  * Debug keyword "flow-cache" missing
  * Make MAC limit debugs conditional

  [ Paul Atkins ]
  * mpls: track pd state when updating label table entry update
  * ut: add mpls test for sending existing route update

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 14 Sep 2020 13:42:54 +0100

vyatta-dataplane (3.11.21) unstable; urgency=medium

  [ Paul Atkins ]
  * netlink: vrf_link_create should return NULL not false on failure

  [ Robert Shearman ]
  * fal: fix generation of next-hop router interface attribute
    (Fixes: VRVDR-52948)

  [ Ian Wilson ]
  * npf: Unused function npf_json_nat_session removed
  * npf: Return rule details in firewall and NAT session json

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 11 Sep 2020 08:37:49 +0100

vyatta-dataplane (3.11.20) unstable; urgency=medium

  [ Paul Atkins ]
  * crypto: policy_rule_find_by_tag should return NULL not false

  [ Gavin Shearer ]
  * cpp: request that the burst rate is set to 100ms

  [ Manohar Rapeti ]
  * qos: enhanced "qos show platform" (Bugfix: VRVDR-52788)
  * qos: possible accessing of freed pointer (Bugfix: VRVDR-52788)
  * qos: Indentation fix (Bugfix: VRVDR-52788)

  [ Ian Wilson ]
  * ut: Renamed npf ICMP tests
  * ut: Added test for ICMP pkts with corrupted embedded packet

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 10 Sep 2020 09:36:33 +0100

vyatta-dataplane (3.11.19) unstable; urgency=medium

  * 3.10.70
  * ut: remove mac limit tests that removes profile while in use
  * ut: dp_test_npf_json_get_portmap_port leaking json array
  * controller: cleanup all requests on shutdown
  * ut: fix mem leak in the qos class tests
  * ut: free the packet descriptors in the session tests
  * ut: cleanup json array after use in sess lib

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 09 Sep 2020 08:43:39 +0100

vyatta-dataplane (3.11.18) unstable; urgency=medium

  [ aroberts ]
  * Don't allow a child shaper to exceed 99.6% of parent rate

  [ Manohar Rapeti ]
  * qos: mem leak in dataplane UT (Bugfix: VRVDR-49730)
  * qos: uninitialised value (Bugfix: VRVDR-49730)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 08 Sep 2020 08:38:25 +0100

vyatta-dataplane (3.11.17) unstable; urgency=medium

  [ aroberts ]
  * Add 100G support for Qos shaper commands
  * Add dependency with 64bit qos structure in dpdk

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 04 Sep 2020 09:54:23 +0100

vyatta-dataplane (3.11.16) unstable; urgency=medium

  [ Robert Shearman ]
  * dpdk-eth: avoid duplicate link up/link down logs (Fixes: VRVDR-52606)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 03 Sep 2020 16:15:43 +0100

vyatta-dataplane (3.11.15) unstable; urgency=medium

  [ Shweta Choudaha ]
  * portmonitor: add and replay multiple cfg command

  [ Ian Wilson ]
  * npf: Rename npf_pack_npf_state to npf_pack_session_state
  * npf: Rename npf_pack_session_stats to npf_pack_dp_sess_stats

  [ Charles (Chas) Williams ]
  * ptp: add additional-path support (Bugfix: VRVDR-48480)

  [ Ian Wilson ]
  * npf: Rename struct npf_pack_npf_nat to struct npf_pack_nat
  * npf: Change prefix in npf_pack_dp_session from 'dps_' to 'pds_'
  * npf: Rename npf_pack_sentry to npf_pack_sentry_packet
  * npf: Use 'pns' for prefix and pointer variable for npf_pack_npf_session
  * npf: Naturally align npf_tcpstate_t and npf_state_t
  * npf: Rename npf_pack_npf_nat64 to npf_pack_nat64
  * npf: Prefix npf_pack_message_hdr objects with 'pmh_'
  * npf: Add packed attribute to 'enum session_pack_type'
  * npf: Prefix npf_pack_session_hdr objects with 'psh_'
  * session: Pack enum session_feature_type and re-arrange session_feature
  * ut: Add function to fetch session counters
  * ut: Tests connsync for a firewall UDP session
  * ut: Tests connsync for a firewall TCP session with TCP strict enabled

  [ Robert Shearman ]
  * 3.10.69

  [ Paul Atkins ]
  * flow_cache: initialise the flow_cache_hash_key to 0
  * ut: modify the stack trace for the urcu resize valgrind suppression
  * ut: return -EOPNOTSUPP in the test fal code in ...l2_get_attrs
  * rte_acl: free the name when calling npf_rte_acl_destroy
  * ut: add a valgrind suppression for rte_cpu_get_flag_enabled
  * ut: add more wildcards to the grouper suppression to catch all calls
  * ut: free the contexts created in the npf_apt tests

  [ Robert Shearman ]
  * include: standardise FAL interface index parameter naming
  * include: standardise FAL object parameter naming (Fixes: VRVDR-52849)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 03 Sep 2020 13:36:47 +0100

vyatta-dataplane (3.11.14) unstable; urgency=medium

  [ Mandeep Rohilla ]
  * BFD: Switch attribute to get Local Discriminator shift

  [ Srinivas Narayan ]
  * crypto: cut over non-combined ciphers to rte infra
  * crypto: Handle failures in session setup gracefully
  * crypto: set up correct default for aead_algo
  * crypto: remove references to cipher_name
  * crypto: remove references to md_name
  * crypto: Remove unnecessary storage of auth alg name
  * crypto: Define separate structure for openssl info
  * crypto: pass openssl setup decision to SA setup function
  * crypto: Remove openssl implementation for aes-gcm
  * crypto: define block sizes
  * crypto: Make iv generation and storage common operations
  * crypto: Move openssl fields to separate structure
  * crypto: include dpdk device id and name in vplsh output
  * crypto: Add error messages in failure path
  * crypto: reset pmd id in array of ids by dev type
  * crypto: Make dev-id value check specific
  * crypto: separate definitions for cipher & digest key sizes

  [ Karthik Murugesan ]
  * vxlan: Added null check to avoid null-pointer dereference

  [ Charles (Chas) Williams ]
  * Fix potentially offensive language
  * Fix potentially offensive language in CGNAT

 -- Robert Shearman <robert.shearman@att.com>  Mon, 24 Aug 2020 17:46:44 +0100

vyatta-dataplane (3.11.13) unstable; urgency=medium

  [ Vinicius Soares ]
  * npf: Moved parser auxiliary static functions to the top of the file
  * npf: Added argument to auxiliary parser function that specifies a delimiter
  * npf: Added support for 'auto-per-action' counter type for ACL rules.
  * npf: Added support for 'auto-per-action' counter type for ACL rules.

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 21 Aug 2020 18:13:12 +0100

vyatta-dataplane (3.11.12) unstable; urgency=medium

  [ Paul Atkins ]
  * 3.10.67

  [ Paul Aitken ]
  * DPI: app groups: avoid null deref

  [ Paul Atkins ]
  * 3.10.68

  [ Robert Shearman ]
  * route_v6: fix nexthop retrieval for promotion during route delete
  * route: fix nexthop retrieval for promotion during route delete
    (Fixes: VRVDR-52609)

  [ Srinivas Narayan ]
  * crypto: store crypto device id in SA for faster access
  * crypto: create session pools and queue pairs for PMD
  * crypto: set up session in driver
  * crypto: Pass crypto op using packet metadata
  * crypto: Make openssl encrypt/decrypt function public
  * crypto: set up infrastructure to invoke PMD
  * crypto: cut over to rte PMD infra
  * crypto: set up crypto op for AES-GCM

  [ Paul Atkins ]
  * debian: fix wording in changelog

  [ Srinivas Narayan ]
  * crypto: minimize dependency on SA
  * crypto: set session direction at the time of SA creation
  * crypto: Make crypto_pkt_ctx visible to other crypto modules
  * crypto: Add packet metadata fields to crypto_pkt_ctx
  * crypto: store SA in crypto packet context
  * crypto: store bytes processed in crypto packet context
  * crypto: refactor esp_input_inner
  * crypto: re-factor esp_output_inner
  * crypto: consolidate esp input functions
  * crypto: consolidate esp_output functions
  * crypto: increment output error only on encrypt op
  * crypto: streamline post-decrypt processing
  * crypto: Refactor post-decrypt VTI handling
  * crypto: re-factor post-decrypt VFP handling
  * crypto: refactor post-decrypt overlay VRF handling
  * crypto: refactor all post-decrypt handling
  * crypto: enable burst processing for esp_input
  * crypto: Enable burst processing for esp_output

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 21 Aug 2020 17:51:18 +0100

vyatta-dataplane (3.11.11) unstable; urgency=medium

  [ Paul Atkins ]
  * gre: don't double free mbuf if using a gre tunnel to ourself

  [ Ian Wilson ]
  * npf: Change npf to use dataplane session states for UDP etc.
  * npf: Store generic session state in the session
  * npf: Set the alg bit in ALG parent sessions
  * npf: Add the se_alg feature boolean to the connsync structure
  * npf: Change the feature uint8_ts to bits in npf_pack_dp_session
  * npf: Replace se_nat bit with se_snat and se_dnat bits in the session
  * npf: Add se_in and se_out bits to the session
  * npf: Add se_app bit to the session to mark dpi sessions
  * npf: Add function to calculate session time-to-expire for json
  * npf: Return generic ALG json for each session
  * npf: Return specific ALG json for each session
  * npf: Naturally align struct npf_pack_dp_session
  * npf: Remove se_etime from connsync session structure
  * ut: Add test functions to create and send udp, tcp, or icmp NATd pkts
  * session: Add command to return list of items from the dataplane sessions
  * npf: Add address family filter to session list command
  * npf: Add filters to session list command for ID, proto, intf and direction
  * npf: Add filters to session list cmd for src and dest addr and port
  * npf: Add filters to session list cmd for features
  * npf: Separate the existing session show filter from the json
  * npf: Add handler for "show dataplane sessions" command
  * npf: Add handler for "show dataplane sessions summary" command
  * npf: Add handler for "clear dataplane sessions" command
  * ut: Rename the npf snat test cases
  * npf: Add a flag to the session to denote that is being used as a fw session

  [ Paul Atkins ]
  * flow_cache: move flow_cache_empty_table higher in file
  * flow_cache: teardown the flow cache on shutdown
  * flow_cache: don't init the flow cache multiple times per core
  * ut: don't leak the ifname in the addport_request

  [ aroberts ]
  * Reinstall a mark-map if a resource group changes

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 19 Aug 2020 09:54:14 +0100

vyatta-dataplane (3.11.10) unstable; urgency=medium

  [ Srinivas Narayan ]
  * crypto: Convert lengths to uint8_t in preparation for move
  * crypto: Avoid dependency on openssl definitions
  * crypto: Re-arrange fields for better performance
  * crypto: create DPDK infrastructure pools
  * crypto: Add DPDK versions of encryption & auth algorithms
  * crypto: clean up openssl functions
  * crypto: determine PMD type based on algorithms
  * crypto: provide function to determine next crypto core
  * crypto: Create DPDK crypto PMD

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 18 Aug 2020 08:29:42 +0100

vyatta-dataplane (3.11.9) unstable; urgency=medium

  [ aroberts ]
  * Don't allow a child shaper to exceed 99.6% of parent rate

  [ Paul Atkins ]
  * 3.10.63

  [ Ian Wilson ]
  * npf: Increment session stats if session matched, and the pkt is not dropped

  [ Paul Atkins ]
  * 3.10.64

  [ Gavin Shearer ]
  * ippf: fix issue of corrupted first byte of IPv6 address to match

  [ Paul Atkins ]
  * 3.10.65

  [ Robert Shearman ]
  * if: move vlan_if_get_stats to common interface code
  * gre: add support for retrieving FAL stats

  [ Paul Atkins ]
  * 3.10.66

  [ Brian Russell ]
  * qos: specify designator for the priority local queue
  * qos: uprev protocol versions

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 17 Aug 2020 15:44:18 +0100

vyatta-dataplane (3.11.8) unstable; urgency=medium

  [ Robert Shearman ]
  * fal_plugin: add object model for MPLS
  * fal_plugin: add FAL object for VRFs
  * fal_plugin: add attributes for MPLS TTL mode (Closes: VRVDR-52435)
  * fal: add next hop label attributes
  * nh_common: add FAL programming helpers
  * route: make use of FAL nh_common helpers
  * route_v6: make use of FAL nh_common helpers
  * mpls: signal FAL create/update/delete of MPLS routes
  * fal: signal use of next hop groups
  * fal: translate IPv6 nexthops with IPv4 mapped addresses to IPv4 nexthop
  * tests: test IPv6 labeled routes via attached IPv4 nexthops
  * vrf: create and use FAL VRF object
  * fal: support MPLS deagg routes
  * mpls: add support for dumping one MPLS route
  * mpls: add support for signalling change to TTL mode to FAL
    (Closes: VRVDR-52436)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 13 Aug 2020 15:09:49 +0100

vyatta-dataplane (3.11.7) unstable; urgency=medium

  [ Robert Shearman ]
  * controller: extend timeout for adding a port (Fixes: VRVDR-52458)

  [ Paul Atkins ]
  * 3.10.58

  [ Karthik Murugesan ]
  * vxlan: Added null check to avoid null-pointer dereference

  [ Paul Atkins ]
  * 3.10.59

  [ Paul Aitken ]
  * DPI: add application group database
  * DPI: application resource groups
  * DPI: application resource group parsing
  * DPI: new APIs for application resource groups
  * DPI: add application resource groups to app firewall
  * DPI: add application resource groups to Makefile

  [ Paul Atkins ]
  * 3.10.60

  [ Karthik Murugesan ]
  * ptp: Added support for G.8275.1 profiles

  [ Shweta Choudaha ]
  * Mirror: Add support for source vlan config
  * Mirror: Add support to show vlan info for src intf

  [ Manohar Rapeti ]
  * if: Spurious error logs messages (Bugfix: VRVDR-52346)

  [ Brian Russell ]
  * qos: don't enable dscp mapping if designation in use
  * qos: allocate a priority local designation

  [ Paul Atkins ]
  * 3.10.61

  [ Brian Russell ]
  * qos: extend mark-map to include dp

  [ Paul Atkins ]
  * 3.10.62

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 13 Aug 2020 14:29:20 +0100

vyatta-dataplane (3.11.6) unstable; urgency=medium

  [ Gavin Shearer ]
  * cpp: add support for PIM and IP multicast

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 05 Aug 2020 16:23:14 +0100

vyatta-dataplane (3.11.5) unstable; urgency=medium

  [ Brian Russell ]
  * qos: restore protocol version 10

  [ Rishi Narain ]
  * SyncE: Allowing ESMC frame flow from vyatta-dataplane
  * SyncE: New feature support

  [ Ramkumar Ganapathysubramanian ]
  * Removed unnecessary error logs in L3 Interface attribute set

  [ Paul Atkins ]
  * dp_event: reorder some of the dp_events in the enum
  * event: add a public event notifier for vrf create/delete events
  * 3.10.56

  [ Charles (Chas) Williams ]
  * netvsc: increase driver limits (Bugfix: VRVDR-52360)
  * ptp: check switch nexthop interface is reachable (Bugfix: VRVDR-52447)

  [ Paul Atkins ]
  * 3.10.57

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 05 Aug 2020 10:01:32 +0100

vyatta-dataplane (3.11.4) unstable; urgency=medium

  [ Paul Atkins ]
  * 3.10.54
  * Jenkins: change master branch target to be DANOS:Glasgow

  [ Simon Barber ]
  * Convert return string of vplsh led blink cmd to json

  [ Paul Aitken ]
  * dataplane abort due to short string in rte_jhash

  [ Ramkumar Ganapathysubramanian ]
  * Adding support for DSCP or PCP value in QoS egress-map

  [ Paul Aitken ]
  * DPI: Inconsistent use of protocol in DPI output
  * Avoid buffer overrun in sip_alg_hash

  [ Robert Shearman ]
  * 3.10.55

 -- Robert Shearman <robert.shearman@att.com>  Tue, 28 Jul 2020 09:43:59 +0100

vyatta-dataplane (3.11.3) unstable; urgency=medium

  [ Robert Shearman ]
  * fal: check for conditions that violate FAL route API contract
  * lpm: pass pd_state by reference in walk callback
  * route: update dependent routes when interface FAL L3 state changes
  * route6: update dependent routes when interface FAL L3 state changes
    (Fixes: VRVDR-50303)

  [ Paul Atkins ]
  * 3.10.52

  [ Robert Shearman ]
  * nh_common: skip over backup next-hops when fixing up protected tracking
    (Fixes: VRVDR-52257)
  * ut: add symbols for router-interface FAL object in test FAL
  * ut: test PIC edge with a gateway being used by both primary & backup

  [ Ian Wilson ]
  * npf: Add npf return code counters
  * npf: Add commands to show return code counters
  * npf: Add mechanism to filter return code show output dependent on type
  * npf: Add commands to clear return code counters
  * ut: Add function to fetch and print npf return code counts
  * npf: Change nat64 to use nat64_decision_t instead of npf_decision_t
  * npf: Increment return code counters in npf_hook_track
  * npf: Change npf_cache_all to return either a 0 or a negative return code
  * npf: Change the function used by npf_cache_all to return a return code
  * npf: Add return codes to npf_cache_all
  * npf: Add param to npf_get_cache to allow return code to be returned
  * npf: Add return codes to npf state functions
  * npf: Add return codes to npf_hook_track calls to session functions
  * npf: Add return codes to the function to rewrite l3 and l4 fields
  * npf: Add return code to npf_icmpv4_err_nat
  * npf: Change nat64 common functions to have a single return point
  * npf: Add return codes to the nat64 map and convert functions
  * npf: Add return codes to nat64
  * npf: Add optional pointer, rcp, to npf_hook_notrack parameters
  * npf: Increment l2 return code counters in bridging
  * npf: Add single return point in local firewall functions
  * npf: Increment return code counts for local firewall
  * npf: Increment return code counts for ACL firewall
  * npf: Return select detailed return code stats for nat64

  [ Paul Atkins ]
  * 3.10.53

  [ Robert Shearman ]
  * storm_ctl: fix write to heap after free when deleting an instance
    (Fixes: VRVDR-52115)
  * tests: add test for storm-control out of order profile delete
  * Makefile.am: reduce dependencies of fal_plugin_test_la

  [ Charles (Chas) Williams ]
  * main: handle sparse port configurations (Bugfix: VRVDR-49805)
  * netvsc: set more reasonable queue lengths (Bugfix: VRVDR-49805)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 24 Jul 2020 16:13:59 +0100

vyatta-dataplane (3.11.2) unstable; urgency=medium

  [ bs775m ]
  * fal_plugin :add attributes for enb/dis pause frame
  * vyatta-datapath:add support for enb/dis pauseframe

  [ Charles (Chas) Williams ]
  * Correct enumeration declaration

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 24 Jul 2020 09:12:29 +0100

vyatta-dataplane (3.11.1) unstable; urgency=medium

  [ Mandeep Rohilla ]
  * BFD: Add support for querying max interval values supported

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 20 Jul 2020 21:45:59 +0100

vyatta-dataplane (3.10.70) unstable; urgency=medium

  [ aroberts ]
  * Don't allow a child shaper to exceed 99.6% of parent rate

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 04 Sep 2020 10:15:04 +0100

vyatta-dataplane (3.10.69) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * ptp: add additional-path support (Bugfix: VRVDR-48480)

 -- Robert Shearman <robert.shearman@att.com>  Tue, 01 Sep 2020 11:42:50 +0100

vyatta-dataplane (3.10.68) unstable; urgency=medium

  [ Paul Aitken ]
  * DPI: app groups: avoid null deref

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 19 Aug 2020 11:43:55 +0100

vyatta-dataplane (3.10.67) unstable; urgency=medium

  * gre: don't double free mbuf if using a gre tunnel to ourself

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 19 Aug 2020 08:37:29 +0100

vyatta-dataplane (3.10.66) unstable; urgency=medium

  [ Robert Shearman ]
  * if: move vlan_if_get_stats to common interface code
  * gre: add support for retrieving FAL stats

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 17 Aug 2020 10:14:51 +0100

vyatta-dataplane (3.10.65) unstable; urgency=medium

  [ Gavin Shearer ]
  * ippf: fix issue of corrupted first byte of IPv6 address to match

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 17 Aug 2020 09:44:06 +0100

vyatta-dataplane (3.10.64) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Increment session stats if session matched, and the pkt is not dropped

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 14 Aug 2020 10:29:11 +0100

vyatta-dataplane (3.10.63) unstable; urgency=medium

  [ aroberts ]
  * Don't allow a child shaper to exceed 99.6% of parent rate

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 14 Aug 2020 10:26:41 +0100

vyatta-dataplane (3.10.62) unstable; urgency=medium

  [ Brian Russell ]
  * qos: extend mark-map to include dp

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 13 Aug 2020 10:17:11 +0100

vyatta-dataplane (3.10.61) unstable; urgency=medium

  [ Brian Russell ]
  * qos: don't enable dscp mapping if designation in use
  * qos: allocate a priority local designation

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 10 Aug 2020 14:46:43 +0100

vyatta-dataplane (3.10.60) unstable; urgency=medium

  [ Paul Aitken ]
  * DPI: add application group database
  * DPI: application resource groups
  * DPI: application resource group parsing
  * DPI: new APIs for application resource groups
  * DPI: add application resource groups to app firewall
  * DPI: add application resource groups to Makefile

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 06 Aug 2020 13:15:51 +0100

vyatta-dataplane (3.10.59) unstable; urgency=medium

  [ Karthik Murugesan ]
  * vxlan: Added null check to avoid null-pointer dereference

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 06 Aug 2020 08:46:48 +0100

vyatta-dataplane (3.10.58) unstable; urgency=medium

  [ Robert Shearman ]
  * controller: extend timeout for adding a port (Fixes: VRVDR-52458)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 05 Aug 2020 16:25:22 +0100

vyatta-dataplane (3.10.57) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * ptp: check switch nexthop interface is reachable (Bugfix: VRVDR-52447)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 05 Aug 2020 09:26:54 +0100

vyatta-dataplane (3.10.56) unstable; urgency=medium

  * dp_event: reorder some of the dp_events in the enum
  * event: add a public event notifier for vrf create/delete events

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 04 Aug 2020 15:41:08 +0100

vyatta-dataplane (3.10.55) unstable; urgency=medium

  [ Paul Atkins ]
  * Jenkins: change master branch target to be DANOS:Glasgow

  [ Simon Barber ]
  * Convert return string of vplsh led blink cmd to json

  [ Paul Aitken ]
  * dataplane abort due to short string in rte_jhash
  * DPI: Inconsistent use of protocol in DPI output
  * Avoid buffer overrun in sip_alg_hash

 -- Robert Shearman <robert.shearman@att.com>  Tue, 28 Jul 2020 09:31:32 +0100

vyatta-dataplane (3.10.54) unstable; urgency=medium

  [ Robert Shearman ]
  * storm_ctl: fix write to heap after free when deleting an instance
    (Fixes: VRVDR-52115)
  * tests: add test for storm-control out of order profile delete
  * Makefile.am: reduce dependencies of fal_plugin_test_la

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 24 Jul 2020 09:51:57 +0100

vyatta-dataplane (3.10.53) unstable; urgency=medium

  [ Robert Shearman ]
  * nh_common: skip over backup next-hops when fixing up protected tracking
    (Fixes: VRVDR-52257)
  * ut: add symbols for router-interface FAL object in test FAL
  * ut: test PIC edge with a gateway being used by both primary & backup

  [ Ian Wilson ]
  * npf: Add npf return code counters
  * npf: Add commands to show return code counters
  * npf: Add mechanism to filter return code show output dependent on type
  * npf: Add commands to clear return code counters
  * ut: Add function to fetch and print npf return code counts
  * npf: Change nat64 to use nat64_decision_t instead of npf_decision_t
  * npf: Increment return code counters in npf_hook_track
  * npf: Change npf_cache_all to return either a 0 or a negative return code
  * npf: Change the function used by npf_cache_all to return a return code
  * npf: Add return codes to npf_cache_all
  * npf: Add param to npf_get_cache to allow return code to be returned
  * npf: Add return codes to npf state functions
  * npf: Add return codes to npf_hook_track calls to session functions
  * npf: Add return codes to the function to rewrite l3 and l4 fields
  * npf: Add return code to npf_icmpv4_err_nat
  * npf: Change nat64 common functions to have a single return point
  * npf: Add return codes to the nat64 map and convert functions
  * npf: Add return codes to nat64
  * npf: Add optional pointer, rcp, to npf_hook_notrack parameters
  * npf: Increment l2 return code counters in bridging
  * npf: Add single return point in local firewall functions
  * npf: Increment return code counts for local firewall
  * npf: Increment return code counts for ACL firewall
  * npf: Return select detailed return code stats for nat64

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 22 Jul 2020 10:10:23 +0100

vyatta-dataplane (3.10.52) unstable; urgency=medium

  [ Robert Shearman ]
  * fal: check for conditions that violate FAL route API contract
  * lpm: pass pd_state by reference in walk callback
  * route: update dependent routes when interface FAL L3 state changes
  * route6: update dependent routes when interface FAL L3 state changes
    (Fixes: VRVDR-50303)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 21 Jul 2020 07:47:56 +0100

vyatta-dataplane (3.10.51) unstable; urgency=medium

  [ Mandeep Rohilla ]
  * BFD: Add support for querying max interval values supported

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 20 Jul 2020 21:23:09 +0100

vyatta-dataplane (3.10.50) unstable; urgency=medium

  * sanitizer: set ASAN_OPTIONS when sanitizer is used

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 20 Jul 2020 13:36:11 +0100

vyatta-dataplane (3.10.49) unstable; urgency=medium

  [ Robert Shearman ]
  * shadow: remove the shadow port handler when an interface is freed
    (Fixes: VRVDR-52193)
  * shadow: use events for init/destroy
  * sample: fix the visit_after node declaration

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 20 Jul 2020 13:18:35 +0100

vyatta-dataplane (3.10.48) unstable; urgency=medium

  [ Robert Shearman ]
  * config: factor out and simplify PCI address parsing for backplane ports
  * config: parse management_port platform.conf attribute
  * dpdk-eth: add management port attribute to interface information

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 20 Jul 2020 08:46:22 +0100

vyatta-dataplane (3.10.47) unstable; urgency=medium

  [ Thomas Kiely ]
  * mac_limit: Remove temporary show keyword

  [ Charles (Chas) Williams ]
  * coverity: fix handling when an error is returned (Bugfix: VRVDR-52191)

  [ Robert Shearman ]
  * dpdk-eth: only remove a LAG port after the ifp using it has been freed
  * main: only close the ports after cleaning up interfaces (Fixes: VRVDR-52220)

  [ Paul Atkins ]
  * fal: provide alternate name for FAL_BFD_HW_MODE_CP_INDEPENDENT

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 16 Jul 2020 12:02:27 +0100

vyatta-dataplane (3.10.46) unstable; urgency=medium

  [ Mike Manning ]
  * L2TPv3: Fails to be ping across tunnel using L2TPv3

  [ Robert Shearman ]
  * if: fix cleanup of DPDK ethernet interfaces (Fixes: VRVDR-52145)

  [ Paul Atkins ]
  * ut: add vars that tests can use to pass state to the fal

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 10 Jul 2020 13:59:35 +0100

vyatta-dataplane (3.10.45) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add a CODEOWNERS file

  [ Charles (Chas) Williams ]
  * vhost: fix netlink races with hotplug (Bugfix: VRVDR-50960)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 08 Jul 2020 15:21:32 +0100

vyatta-dataplane (3.10.44) unstable; urgency=medium

  * main: allow the user to specify the platform_file location
  * ut: allow user to specify platform conf file

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 07 Jul 2020 13:02:45 +0100

vyatta-dataplane (3.10.43) unstable; urgency=medium

  [ Nicholas Brown ]
  * Remove last mentions of valgrind build
  * Enable the address sanitizer as part of the jenkins build
  * use .checkpatch.conf

  [ Robert Shearman ]
  * dpdk-eth: check that ifp exists in linkwatch_change_mark_state
  * dpdk-eth: don't require ifp for updating queue state (Fixes: VRVDR-52109)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 06 Jul 2020 13:29:50 +0100

vyatta-dataplane (3.10.42) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * lag: remove potentially offensive language (Bugfix: VRVDR-51820)
  * main: remove potentially offensive language (Bugfix: VRVDR-51820)
  * vrf: remove potentially offensive language (Bugfix: VRVDR-51820)
  * bridge: remove potentially offensive language (Bugfix: VRVDR-51820)
  * tests: remove potentially offensive language (Bugfix: VRVDR-51820)
  * session: remove potentially offensive language (Bugfix: VRVDR-51820)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 03 Jul 2020 15:49:00 +0100

vyatta-dataplane (3.10.41) unstable; urgency=medium

  [ Robert Shearman ]
  * if: issue feature event for interface being created
  * mstp: defer creation of STP object until after bridge created in FAL
    (Fixes: VRVDR-52083)
  * bridge: fix duplicate FAL br_new_port notification (Fixes: VRVDR-52084)
  * ut: validate FAL contract for bridge-port objects

  [ Thomas Kiely ]
  * mac_limit: Rename "mac-count" command to "limit status"

  [ Brian Russell ]
  * qos: update fal global map when resource group changes

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 03 Jul 2020 14:22:05 +0100

vyatta-dataplane (3.10.40) unstable; urgency=medium

  [ harios ]
  * Fix done for nexthop as IPv4 mapped IPv6 address

  [ Robert Shearman ]
  * main: swap order of checks on closing ports (Fixes: VRVDR-52095)
  * if: make promiscuity apply to VLANs as well as MAC addresses
    (Fixes: VRVDR-52049)
  * capture: remove interface-type check for setting promiscuity

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 03 Jul 2020 09:06:51 +0100

vyatta-dataplane (3.10.39) unstable; urgency=medium

  [ Robert Shearman ]
  * ut: add dp1 prefix to switchports
  * devinfo: change if_port_info to not require an ifp
  * master: avoid needing ifp present when adding/deleting ports
  * if: classify backplane ports as dataplane interfaces
  * if: clean up life-cycle of DPDK ethernet interface objects
    (Closes: VRVDR-51844)
  * if: remove missed link & unspec address handling
  * if: remove missed IP address & netconf handling (Closes: VRVDR-51845)
  * if: remove unused hwport incomplete infra

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 02 Jul 2020 08:52:24 +0100

vyatta-dataplane (3.10.38) unstable; urgency=medium

  [ Robert Shearman ]
  * shadow: remove superfluous interface netlink state management

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 01 Jul 2020 13:24:13 +0100

vyatta-dataplane (3.10.37) unstable; urgency=medium

  [ Paul Aitken ]
  * DPI: add nDPI debugging
  * DPI: load optional nDPI protocols and categories

  [ Charles (Chas) Williams ]
  * unit tests: fix mbuf debuggging (Bugfix: VRVDR-51987)
  * crypto: fix mbuf debugging (Bugfix: VRVDR-51987)
  * mpls: reject short packets (Bugfix: VRVDR-51987)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 01 Jul 2020 09:22:12 +0100

vyatta-dataplane (3.10.36) unstable; urgency=medium

  * control: add a comment to request new commands in protobuf format
  * dpdk_eth_if: don't dump ports that have been unplugged
  * if: in ifnet_byethname skip over unplugged interfaces
  * hotplug: mark the interface as unplugged at the start of processing
  * dpdk_eth_if: don't assume that info.driver_name is valid

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 24 Jun 2020 09:07:45 +0100

vyatta-dataplane (3.10.35) unstable; urgency=medium

  [ Shweta Choudaha ]
  * Backplane:Shut DPDK bkplane ports post fal cleanup

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 19 Jun 2020 16:18:37 +0100

vyatta-dataplane (3.10.34) unstable; urgency=medium

  [ Ethan Li ]
  * bfd-hw: add FAL attribute for BFD hw running mode

  [ Nicholas Brown ]
  * sample plugin and test code only using public API
  * The test code for the sample plugin should also a plugin

  [ Ian Wilson ]
  * npf: Set custom timeout in dataplane session after session is created
  * npf: Add option to cache pkt without updating the cache grouper data
  * npf: Move _npf_cache_all_at in order to avoid forward reference

  [ Thomas Kiely ]
  * Avoid unnecessary unapply of mac limit feature

  [ Mandeep Rohilla ]
  * BR_VLAN_SET: Api to determine if vlan set is empty
  * BR_VLAN_SET UT: unit tests for the vlan set empty api

  [ Paul Atkins ]
  * ut: func to verify state based on pb show should use void *

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 19 Jun 2020 09:02:21 +0100

vyatta-dataplane (3.10.33) unstable; urgency=medium

  [ Ian Wilson ]
  * cgnat: Several small cosmetic changes to cgnat
  * cgnat: Add 2-tuple sessn to hash table if it fails to be added directly
  * cgnat: Move 2-tuple session inspection code into separate function
  * cgnat: Block outbound flow if max-dest-per-session reached
  * cgnat: Block inbound packets if max-dest-per-session reached
  * cgnat: Increase maximum configurable max-dest-per-session to 128
  * ut: Fixup cgnat25 to expect an ICMP error
  * cgnat: Remove interface config store and replay mechanism
  * ut: Remove cgnat14 test for interface store and replay mechanism

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 16 Jun 2020 10:32:46 +0100

vyatta-dataplane (3.10.32) unstable; urgency=medium

  [ Mandeep Rohilla ]
  * DP_EVENT: Add new event for MTU change notifications
  * MTU: Register QoS's intereset in MTU change
  * MTU: Don't bounce the port when changing the MTU

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 12 Jun 2020 11:54:49 +0100

vyatta-dataplane (3.10.31) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Simplify and enhance the api for fetching address group json

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 12 Jun 2020 11:14:46 +0100

vyatta-dataplane (3.10.30) unstable; urgency=medium

  [ Robert Shearman ]
  * debian: don't suppress changelog generation
  * Pull JSON writer code out into a shared library (Fixes: VRVDR-51389)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 09 Jun 2020 09:24:36 +0100

vyatta-dataplane (3.10.29) unstable; urgency=medium

  [ Srinivas Narayan ]
  * Check if next hop is non-NULL before de-referencing it

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 09 Jun 2020 08:40:38 +0100

vyatta-dataplane (3.10.28) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * conf: allow dev_flags to be filtered (Bugfix: VRVDR-48438)
  * ixgbe: do not use the LSC interrupt (Bugfix: VRVDR-48438)
  * ifconfig: allow inspection of the lsc status
  * vhost: do not wait forever for QMP (Bugfix: VRVDR-51099)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 05 Jun 2020 10:16:49 +0100

vyatta-dataplane (3.10.27) unstable; urgency=medium

  [ Ian Wilson ]
  * nat64: Only dereference the session sentry once
  * nat64: Free memory before returning in nat64_create error case

  [ Robert Shearman ]
  * storm_ctl: avoid redundant FAL update when adding threshold for new type
  * storm_ctl: move fal_policer_modify_profile function down
  * storm_ctl: make threshold removal FAL state symmetric (Fixes: VRVDR-51406)

  [ Paul Atkins ]
  * lpm6: fix check for depth when removing /24

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 04 Jun 2020 12:28:06 +0100

vyatta-dataplane (3.10.26) unstable; urgency=medium

  [ Mark Gillott ]
  * if: migrate hardware port completion to separate function
  * if: replace NEWPORT with INIPORT & ADDPORT (Fixes: VRVDR-46511)
  * if: postpone snapshot request until port initialisation complete
    (Fixes: VRVDR-46511)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 29 May 2020 14:15:43 +0100

vyatta-dataplane (3.10.25) unstable; urgency=medium

  [ Paul Aitken ]
  * DPI: fix memleaks in dpi_ctor
  * DPI: make initialisation return errno

  [ Robert Shearman ]
  * ip_rt_protobuf: fix coverity resource leak reports (Fixes: VRVDR-51284)

  [ Ian Wilson ]
  * cgnat: Return NAT pool "full" (np_full) json to control plane

  [ ak487r ]
  * tests: remove ipv6 ND Solicitation tests for originating firewall

  [ Ian Wilson ]
  * cgnat: Max dest per session only allows powers of two

  [ Tom Kiely ]
  * MAC Limit: Add a new attr for mac limit on port/vlan
  * MAC Limit: Add a new log type flag for mac limiting feat
  * MAC Limit: Add support for creating MAC limiting profiles
  * MAC Limit: Add support mac limit entry based on port/vlan
  * MAC Limit: Apply mac limiting in the FAL
  * MAC Limit: Add hooks for applying mac limiting based on dp events
  * MAC Limit: Add support for show command
  * Add Unit Tests for MAC limiting feature.

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 29 May 2020 12:13:11 +0100

vyatta-dataplane (3.10.24) unstable; urgency=medium

  [ Paul Atkins ]
  * main: add a wrapper to unregister a thread with rcu
  * ip_forward: remove references to next_hop_v6

  [ Robert Shearman ]
  * route: set some missing address family types
  * route_v6: set some missing address family types
  * mpls: set some missing address family types

  [ Paul Atkins ]
  * main: make ASSERT_MASTER public

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 22 May 2020 11:01:09 +0100

vyatta-dataplane (3.10.23) unstable; urgency=medium

  [ Paul Atkins ]
  * debian: define prefix in the libyattafal .pc file

  [ Paul Carson ]
  * Forward PPP CHAP traffic to PPP (Fixes: VRVDR-49231)

  [ Derek Fawcus ]
  * NPF: Use ICMP opcode defines, not magic values
  * NPF: Adjust ICMP opcode generation
  * NPF: Enable matching of ICMP classes in ncode
  * Update checkpath warnings in use

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 21 May 2020 10:40:12 +0100

vyatta-dataplane (3.10.22) unstable; urgency=medium

  [ Robert Shearman ]
  * debug_strip: add build-ids to package metadata
  * Generate -dbgsym packages per binary package (Fixes: VRVDR-50948)

  [ Shweta Choudaha ]
  * flow_cache: Use get_lcore_max to get max lcoreid

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 19 May 2020 10:59:05 +0100

vyatta-dataplane (3.10.21) unstable; urgency=medium

  [ Paul Atkins ]
  * nd6_nbr: when storing the v6 addr use sockaddr_storage not sockaddr

  [ Gavin Shearer ]
  * nat64: check rule group name of rule is set before accessing it

  [ Paul Atkins ]
  * main: make sure that we don't register rcu thread twice

  [ Charles (Chas) Williams ]
  * dpdk: get dev_info before closing (Bugfix: VRVDR-51041)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 18 May 2020 19:29:08 +0100

vyatta-dataplane (3.10.20) unstable; urgency=medium

  [ Paul Aitken ]
  * DPI: new APIs to support application name database
  * DPI: new APIs to support application type database
  * DPI: new APIs for user-defined applications
  * DPI: new APIs to allow packet processing by nDPI
  * DPI: change --without-dpi to build without nDPI
  * DPI: add new files to makefile
  * DPI: remove redundant files
  * DPI: don't need to include DPI
  * DPI: remove Qosmos from dpi_internal.h, add new APIs
  * DPI: update app_cmds.c includes
  * DPI: dpi_public.c to call the engine-based APIs
  * DPI: update DPI rprocs to engine-based APIs
  * DPI: remove app database from npf_ext_app.c
  * DPI: update app FW DPI rprocs to use engine-based APIs
  * DPI: update L3 DPI pipeline to use engine-based APIs
  * DPI: add new engine-based APIs to dpi.c
  * DPI: add libndpi-dev build dependency

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 18 May 2020 15:32:27 +0100

vyatta-dataplane (3.10.19) unstable; urgency=medium

  [ ak487r ]
  * npf: add originating firewall
  * tests: add ipv4 tcp slowpath tests for originating firewall
  * tests: add ipv6 tcp slowpath tests for originating firewall
  * tests: add ipv4 icmp packet to big tests for originating firewall
  * tests: add ipv6 icmp packet to big tests for originating firewall
  * tests: add ipv6 ND Advertisement tests for originating firewall
  * tests: add ipv6 ND Solicitation tests for originating firewall
  * tests: add ipv4 echo reply by cgnat for originating firewall

  [ Paul Atkins ]
  * ut: fix issue with buffer size when comparing one-of
  * nh_common: change 1 to 1ull when using it to shift 64 bit numbers
  * nh_common: when updating map get the count from the bitmap
  * nh_common: on nh_map init leave space for unusable primaries
  * nh_common: use CMM macros when reading/modifying the usability flag
  * nh_common: reinit nh map contents if collisions when marking unusable
  * nh_common: let paths be marked usable and unusable
  * ut: tests for pic edge where a path is made usable
  * route6: display the next hop map for v6 routes
  * ut: remove extra whitespace in pic edge tests
  * ut: add an ipv6 pic edge test
  * route: register path_state functions with event infra for cleanup

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 18 May 2020 13:56:55 +0100

vyatta-dataplane (3.10.18) unstable; urgency=medium

  [ Sanjay Iyer ]
  * hw-bfd: Add additional FAL attributes (Fixes: VRVDR-50399)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 15 May 2020 17:24:01 +0100

vyatta-dataplane (3.10.17) unstable; urgency=medium

  [ Paul Atkins ]
  * nh_common: check if a nh is unusable before marking as unusable
  * nh_common: don't put an unusable nh into the map at init time
  * nh_common: add a bitmask to track usable next_hops
  * ut: allow for checking for one of many expected strings
  * ut: further tests for pic edge

  [ Gavin Shearer ]
  * nat: add support in apm for multiple port maps based on protocol
  * nat: rename fields in port_prot structure
  * nat: add passing in IP proto to apm port request fns
  * nat: update per-rule nat statistics to be per-protocol
  * nat: pass back in JSON the per-protocol rule used counts
  * nat: add warning if changing port pool for separate ICMP pool

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 15 May 2020 13:40:54 +0100

vyatta-dataplane (3.10.16) unstable; urgency=medium

  [ Robert Shearman ]
  * if: fix typo in ifop_uninit comment
  * bridge: issuing FAL delport notifications for members on bridge delete
    (Fixes: VRVDR-51123)

  [ Srinivas Narayan ]
  * npf: Add a flag to enable hash table linkage for rules
  * npf: add hash table linkage for rules

  [ Paul Atkins ]
  * nh_common: change api to mark path unusable to also allow usable

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 15 May 2020 11:53:04 +0100

vyatta-dataplane (3.10.15) unstable; urgency=medium

  [ Dewi Morgan ]
  * dataplane: add dp_ifnet_admin_status api

  [ Paul Atkins ]
  * nh_common: when a next_hop is marked unusable update the fal
  * urcu: add an API to allow a thread to register with urcu
  * dpdk_linkwatch: on link down mark paths unusable

  [ Robert Shearman ]
  * fal: signal backup paths

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 13 May 2020 16:27:47 +0100

vyatta-dataplane (3.10.14) unstable; urgency=medium

  [ Srinivas Narayan ]
  * npf: Add flags to skip stats maintenance
  * npf: Skip stats allocation if NO_STATS flag is set
  * npf: Add NULL checks for rule stats where necessary
  * npf: Skip stats allocation for IPsec rulesets
  * npf: Use NO_STATS flag to optimize high level ops

  [ Simon Barber ]
  * Set the l3 length of Site-2-Site Packets for TX on spath

  [ Paul Atkins ]
  * ut: move the pic edge tests into dp_test_ip_pic_edge.c
  * nh_common: change the nexthop to have a struct_ip addr
  * nh_common: rename nexthop_create_copy
  * mpls: make nh_outlabels_copy copy all labels
  * nh_common: add a function to copy a next_hop and use instead of memcpy
  * nh_common: provide apis to help do a modify of an active next_hop_list
  * nh_common: store the number of primary paths in the next_hop_list
  * nh_common: store the protected next_hops in a 2 level hash
  * nh_common: use a nh_map when a next_hop_list has backup paths
  * route: Add an api to allow plugins to provide path state
  * nh_common: add a ptr back from the NH to the NH list
  * nh_common: update sw forwarding state when a NH becomes unusable
  * ut: ip pic edge tests
  * ut: ip pic edge tests with traffic
  * nh_common: fix typos in comments
  * nh_common: when tracking nexthops with backups, skip those with no ifp

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 13 May 2020 08:43:08 +0100

vyatta-dataplane (3.10.13) unstable; urgency=medium

  [ Nicholas Brown ]
  * update autconf dpdk check to check for 19.11

  [ Robert Shearman ]
  * protobuf: fix typo in description of mpls_labels field

  [ Srinivas Narayan ]
  * flow-cache: Add API prototypes for flow-cache
  * flow-cache: Move crypto pkt buffer definition
  * flow-cache: Rename pr_cache* to flow_cache*
  * flow-cache: Rename variable used for flow_cache_entry
  * flow-cache: Move address union definition to make it re-usable
  * flow-cache: Migrate addresses to common definition
  * flow-cache: Enable support for IPv6
  * flow-cache: refactor common code invoking flow_cache_add
  * flow-cache: Decouple flow cache from crypto per-core block
  * flow-cache: use accessors for rule and context
  * flow-cache: add a bit to identify packets not matching any rule
  * flow-cache: Add support for caching negative matches
  * flow-cache: Create cache entries for cleartext packets
  * flow-cache: Skip further processing on cache match for cleartext packet
  * flow-cache: Avoid de-referencing policy rule unless present
  * flow-cache: Use rss hash if present in buffer
  * flow-cache: Add support for aging
  * flow-cache: refactor code to dump cache
  * flow-cache: Move flow-cache infra to separate module
  * flow-cache: Emit hit counts
  * flow-cache: split flow cache dump into smaller functions
  * flow-cache: Update comments to use 'flow cache'
  * flow-cache: rename crypto specific function & macro
  * flow-cache: Reorder fields to remove holes in structure

  [ Shweta Choudaha ]
  * backplane: use device max_mtu for backplane intf

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 12 May 2020 12:13:28 +0100

vyatta-dataplane (3.10.12) unstable; urgency=medium

  * debian: update dependency on vyatta-dpdk-swport

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 11 May 2020 14:31:12 +0100

vyatta-dataplane (3.10.11) unstable; urgency=medium

  [ Brian Russell ]
  * qos: fix legacy map show

  [ Nicholas Brown ]
  * git ignore more debian package install directories
  * dataplane-dev does not have a dependency on the test binary

  [ Robert Shearman ]
  * route_v6: move handle_route6 function to ip_netlink.c
  * if: rename incomplete_route_add function
  * protobuf: add definition for route updates from the RIB
  * ip_rt_protobuf: add support for decoding protobuf route updates
  * tests: add support for protobuf route messages
  * ip_rt_protobuf: add support for installing backup paths
  * tests: add test for routes with backup paths
  * ecmp: move netlink handling to ip_netlink.c
  * ip_rt_protobuf: preserve display behaviour for MPLS deagg routes

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 11 May 2020 11:49:36 +0100

vyatta-dataplane (3.10.10) unstable; urgency=medium

  [ Mike Larson ]
  * Typo in include guard

  [ Shweta Choudaha ]
  * Add support for I40E X722 device

  [ Charles (Chas) Williams ]
  * dpdk: 19.11: struct ether_addr to struct rte_ether_addr
    (Bugfix: VRVDR-45636)
  * dpdk: 19.11; is_*_ether_addr to rte_is_*_ether_addr (Bugfix: VRVDR-45636)
  * dpdk: 19.11: e_RTE_METER_COLORS to RTE_COLORS (Bugfix: VRVDR-45636)
  * dpdk: 19.11: rename struct *_hdr to struct rte_*_hdr (Bugfix: VRVDR-45636)
  * dpdk: 19.11: ETHER_* to RTE_ETHER_* (Bugfix: VRVDR-45636)
  * dpdk: 19.11: add alignment to packed structs (Bugfix: VRVDR-45636)
  * dpdk: 19.11: fix swport unit tests (Bugfix: VRVDR-45636)
  * dpdk: 19.11: update build depdendencies (Bugfix: VRVDR-45636)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 11 May 2020 09:13:58 +0100

vyatta-dataplane (3.10.9) unstable; urgency=medium

  [ Gavin Shearer ]
  * alg: ensure parent session active before linking child

  [ Paul Atkins ]
  * 3.9.108

  [ Charles (Chas) Williams ]
  * crypto: count burst buffer full as drops (Bugfix: VRVDR-50279)
  * crypto: count most errors as proto drops (Bugfix: VRVDR-50279)
  * crypto: eliminate macro usage (Bugfix: VRVDR-50279)
  * crypto: count packets against tunnel interface (Bugfix: VRVDR-50279)
  * crypto: do not count failed packets (Bugfix: VRVDR-50279)

  [ Paul Atkins ]
  * 3.9.109

  [ Mark Gillott ]
  * Register event operations only on first use (Fixes: VRVDR-50621)
  * Capture portmonitor replay errors (Fixes: VRVDR-50621)

  [ Paul Atkins ]
  * 3.9.110

  [ Charles (Chas) Williams ]
  * vhost: fix QMP communication (Bugfix: VRVDR-50745)

  [ Paul Atkins ]
  * 3.9.111

  [ Nicholas Brown ]
  * Add new public API dp_pipeline_is_feature_enabled_by_inst()

  [ Paul Atkins ]
  * 3.9.112

  [ Mark Gillott ]
  * pipeline: add initialiser to declaration of storage_ctx

  [ Nicholas Brown ]
  * Install test headers into the correct path from Makefile
  * dataplane_test in it's own package

  [ Gavin Shearer ]
  * nat64: make per-rule 'used' count be decremented
  * nat64: set full range for overload start/stop ports

  [ Mark Gillott ]
  * pcap: serialise access to capture console socket (Fixes: VRVDR-50937)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 06 May 2020 14:13:12 +0100

vyatta-dataplane (3.10.8) unstable; urgency=medium

  [ Mike Larson ]
  * Add helper functions for protobuf

  [ Paul Atkins ]
  * nh_common: use a common version of nh_get_lables
  * nh_common: use a common version of nh_get_flags
  * mpls: use dp_nh_get_ifp instead of nh_get_if
  * nh_common: use a common version of nexthop_mp_select
  * route: add a family parameter to nexthop_select
  * route6: add a family parameter to nexthop6_select
  * crypto: crypto_policy_handle_packet_outbound_checks to use common nh
  * crypto: pr_feat_attach should use a single nh instead of a union
  * nh_common: use a common version of nexthop_select
  * nh: change nh_select so that it takes a family not a nh_type
  * nh: use nexthop_select instead of nh_select
  * mpls: make mpls_label_table_lookup return a next_hop ptr
  * mpls: make mpls_unlabeled_input return a struct next_hop *
  * mpls: modify mpls_oam_v4_lookup to use a next_hop instead of a union
  * mpls: change mpls_label_table_ins_lbl_internal to take a next_hop ptr
  * mpls: change mpls_label_table_insert_label to take a next_hop ptr
  * mpls: change mpls_label_table_add_reserved_labels to use a next_hop ptr
  * mpls: nh_fwd_mpls should take a struct next_hop ptr
  * mpls: change nh_eth_output_mpls to take a struct next_hop ptr
  * mpls: change nh_mpls_ip_fragment to take a struct next_hop ptr
  * mpls: change nh_mpls_forward to take a struct next_hop ptr
  * mpls: change mpls_labeled_forward to use a struct next_hop ptr
  * mpls: change mpls_unlabeled_forward to use a struct next_hop ptr
  * ecmp: change ecmp_mpls_create to return a struct next_hop ptr
  * mpls: change mpls_route_change to use a struct next_hop ptr
  * crypto: make crypto_policy_check_outbound take a struct next_hop **
  * l3_v4_ipsec: use struct next_hop instead of the nh union
  * l3_v6_ipsec: use struct next_hop instead of the nh union
  * shadow: use struct next_hop instead of the nh union nin spath_reader
  * nh: remove union next_hop_v4_or_v6_ptr as it is no longer used
  * crypto: tidy up code in crypto_policy_check_outbound
  * crypto: remove common code in crypto_policy_feat_attach_by_reqid
  * crypto: remove  common code in policy_bind_feat_attach
  * crypto: remove common code in policy_rule_to_json
  * shadow: commonise next_hop code in spath_reader
  * nh_common: make some of the nexthop functions static
  * nh: move the final funcs from nh.c and delete the file
  * mpls: move nh_fwd_ret into mpls_forward.c as that is the only user
  * nh: remove definition of NH_STRING_MAX as it is unused
  * mpls: remove duplicate code in mpls_route_change
  * nh_common: move enum nh_type into nh_common.h
  * nh_common: include mpls.h as it uses the outlabels defined there
  * nh_common: include ip_addr.h as it uses the ip_addr defined there
  * route: include if_llatbl.h as it use symbols defined there
  * l3_v4_encap: include if_llatbl.h as it use symbols defined there
  * nh: move enum nh_type to nh_common.h and remove nh.h
  * nh_common: rename next_hop_u to next_hop_list

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 01 May 2020 10:11:41 +0100

vyatta-dataplane (3.10.7) unstable; urgency=medium

  [ Nicholas Brown ]
  * Git Ignore generated library files

  [ Robert Shearman ]
  * vlan_modify: fix json writing unwinding for no interfaces
    (Fixes: VRVDR-50839)
  * fal: add FAL next-hop attributes for PIC Edge (Closes: VRVDR-50739)
  * fal: add memory management functions
  * if: use RCU for interface fal_l3 field
  * storm_control: use RCU for instance sci_fal_obj array
  * tests: use FAL memory helpers in test plugin

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 01 May 2020 08:19:56 +0100

vyatta-dataplane (3.10.6) unstable; urgency=medium

  [ Paul Atkins ]
  * ut: change the size of the rings on the tx/rx interfaces
  * ut: provide apis for injecting and getting tx'ed packets
  * ut: add a new test for qos bursts

  [ Robert Shearman ]
  * vlan_modify: don't create filter chain unless there's an action we handle
    (Fixes: VRVDR-50709)
  * vlan_modify: remove some noisy log messages (Fixes: VRVDR-50711)

  [ Mike Larson ]
  * Protobuf support files need to be exported for plug-in
  * Move install location for protobuf generated files
  * Export more UT functions/headers
  * Update pkg-config path for dev
  * Set up dependency correctly for proto projects

  [ Paul Atkins ]
  * route: make the gateway in a next hop a union of v4/v6
  * route: change order of fields in struct next_hop_u
  * mpls: include stdbool.h as the header file uses bool
  * nh_common: add a new nh_common file to contain core nh code
  * route6: make the v6 route code use the common 'struct next_hop'
  * nh_common: move struct next_hop_u into nh_common.h
  * nh_common: remove struct next_hop_v6_u, use the v4/v6 version
  * nh_common: move the struct nexthop_hash_key to nh_common header file
  * route6: use the common nexthop_hash_key structure
  * nh_common: move struct nexthop_table into nh_common.h
  * route6: use the common nexthop table definition
  * nh_common: add code to allow registration per AF
  * nh_common: add common funcs to get/set ifp from nh
  * route6: move route_v6_init and route_v6_uninit lower in file
  * route: register hash functions with nh_common
  * route6: register hash functions with nh_common
  * route: don't use global nh_tbl var from nexthop_new
  * route: modify the debug in nexthop_reuse to add the af
  * nh_common: make the nexthop_lookup function common
  * route6: use the common nexthop_lookup function
  * fal: use a common version of next_hop_to_packet_action
  * fal: use a common version of next_hop_group_packet_action
  * fal: use a common version of next_hop_to_attr_list
  * fal: use a common version of fal_ip_new_next_hops
  * nh_common: use a common version of nexthop_reuse
  * nh_common: use a common version of nexthop_hash_insert
  * route6: pass an address family into nexthop6_new
  * route6: use NEXTHOP_HASH_TBL_SIZE instead of the v6 specific version
  * nh_common: use a common version of nexthop_alloc
  * nh_common: use a common version of nexthop_destroy
  * route6: change nexthop6_new to take a proto field
  * nh_common: use a common version of nexthop_new
  * route: modify nexthop_create to take a struct ip_addr for the gateway
  * route6: modify nexthop6_create to take a struct ip_addr for the gateway
  * nh_common: use a common version of nexthop_create
  * fal: use a common version of fal_ip_del_next_hops
  * nh_common: use a common version of nh_is_neigh_present
  * nh_common: use a common version of nh_is_neigh_created
  * nh_common: use a common version of nh_get_lle
  * route: add a family parameter to nexthop_put
  * route6: add a family parameter to nexthop6_put
  * nh_common: use a common version of nexthop_put
  * nh_common: use a common version of nexthop_create_copy
  * route: add a family parameter to nexthop_hash_del_add
  * route6: add a family parameter to nexthop6_hash_del_add
  * nh_common: use a common version of nexthop_hash_del_add
  * nh_common: use a common version of nh_is_connected
  * nh_common: use a common version of nh_is_local
  * nh_common: use a common version of nh_is_gw
  * route: add a family parameter to nh4_set_neigh_present
  * route6: add a family parameter to nh6_set_neigh_present
  * nh_common: use a common version of nh_set_neigh_present
  * route: add a family parameter to nh4_clear_neigh_present
  * route6: add a family parameter to nh6_clear_neigh_present
  * nh_common: use a common version of nh_clear_neigh_present
  * route: add a family parameter to nh4_set_neigh_created
  * route6: add a family parameter to nh6_set_neigh_created
  * nh_common: use a common version of nh_set_neigh_created
  * route: add a family parameter to nh4_clear_neigh_created
  * route6: add a family parameter to nh6_clear_neigh_created
  * nh_common: use a common version of nh_clear_neigh_created
  * nh_common: use a common version of nextu_nc_count
  * nh_common: use a common version of nextu_find_path_using_ifp
  * nh_common: use a common version of nextu_is_any_connected
  * route: add a family parameter to route_nh_replace
  * route: add a family parameter to route6_nh_replace
  * fal: move next_hop_group_packet_action higher in file
  * fal: use next_hop_group_packet_action when creating new ip nhs

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 29 Apr 2020 08:42:25 +0100

vyatta-dataplane (3.10.5) unstable; urgency=medium

  [ Srinivas Narayan ]
  * Refactor use of grouper2 functions into separate module
  * rte-acl: determine ruleset size at creation time
  * rte-acl: Add packet matching abstraction
  * rte-acl: migrate ruleset to packet match abstraction API
  * rte-acl: Rename npf_grouper_cb_data and make it public
  * rte-acl: Add rte-acl based implementation of packet matching callbacks
  * rte-acl: Set up crypto callbacks for using rte-acl
  * rte-acl: Pass rule group as part of the context to match function
  * rte-acl: Add API to find rule in a group
  * rte-acl: Add API to determine if ruleset uses cache
  * rte-acl: Update crypto callback for match API
  * rte-acl: Use NPF cache only if ruleset requires it
  * rte-acl: skip using npf-cache if ruleset doesn't rely on it
  * rte-acl: Only invoke classifier for non-empty rulesets
  * rte-acl: Streamline call flow in npf_ruleset_inspect

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Mon, 27 Apr 2020 08:09:24 +0100

vyatta-dataplane (3.10.4) unstable; urgency=medium

  * Revert "Protobuf support files need to be exported for plug-in"
  * Revert "Move install location for protobuf generated files"
  * Revert "Export more UT functions/headers"
  * Revert "Update pkg-config path for dev"

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 24 Apr 2020 09:18:28 +0100

vyatta-dataplane (3.10.3) unstable; urgency=medium

  [ Paul Atkins ]
  * ut: mark dp_test_crypto_perf_scale tests as DONT_RUN

  [ Mike Larson ]
  * Protobuf support files need to be exported for plug-in
  * Move install location for protobuf generated files
  * Export more UT functions/headers
  * Update pkg-config path for dev

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 24 Apr 2020 08:21:26 +0100

vyatta-dataplane (3.10.2) unstable; urgency=medium

  [ Mark Gillott ]
  * pcap: run FAL updates on master thread (Fixes: VRVDR-50581)

  [ Paul Atkins ]
  * 3.9.105

  [ Nicholas Brown ]
  * master branch is targeting 2005 release
  * Restore .gitlint file
  * Identify hidden files that should not be ignored

  [ Gavin Shearer ]
  * l3acl: don't commit rules to HW on event IF_FEAT_MODE_EVENT_L3_ENABLED

  [ Ian Wilson ]
  * cgnat: Obsolete some error counts, and add echo-req count to summary

  [ Nicholas Brown ]
  * Remove copyright and license assertion output

  [ Paul Atkins ]
  * ipv4_rsmbl: If we detect duplicate fragments then clean up properly
  * ipv4_rsmbl: check all previous frags to determine duplicates

  [ Srinivas Narayan ]
  * ipsec-ut: Update crypto UTs to support policy count verification
  * ipsec-ut: Force NPF cleanup at the end of s2s suites
  * ipsec-ut: Add NPF cleanup calls to multi-tunnel tests
  * ipsec-ut: Add a test to measure time to setup/teardown 500 tunnels
  * ipsec-ut: Increase poll interval for crypto policy display
  * crypto: Add 'brief' option to 'ipsec spd' command
  * crypto: Add total and live policy counts
  * ipsec-ut: Update UT to use 'brief' cmd and live policy count
  * UT: Add API to specify polling interval for json state
  * ipsec-ut: Update polling interval and count based on new API

  [ Paul Atkins ]
  * ipv4_rsmbl: drop fragment if it includes previously rx'ed bytes
  * ut: enhance the ipv4 duplicate fragment tests
  * ipv6_rsmbl: If we detect duplicate fragments then clean up properly
  * ipv6_rsmbl: check all previous frags to determine duplicates
  * ipv6_rsmbl: drop fragment if it includes previously rx'ed bytes
  * if: make if_output_features always inline
  * l2_vlan_mod: rename the vlan_mod pipline feature file
  * l2_vlan_mod: add a new pipeline node for egress vlan modify
  * portmonitor: add a new pipeline node for output portmonitor
  * capture: add a new pipeline node for output capture
  * if: split if_output into an internal and external version
  * if: remove if_output_features and call the feat point directly
  * if: make the pipeline call if_output_internal
  * 3.9.106

  [ Ian Wilson ]
  * npf: Optimal address-group show output including host addresses

  [ Robert Shearman ]
  * pipeline: use correct ifp for egress vlan modify feature
    (Fixes: VRVDR-50708)

  [ Paul Atkins ]
  * 3.9.107

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 21 Apr 2020 09:40:00 +0100

vyatta-dataplane (3.10.1) unstable; urgency=medium

  [ Nicholas Brown ]
  * master-next branch is targeting danos project

  [ Srinivas Narayan ]
  * crypto: Increase force commit count to 2000

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 08 Apr 2020 13:36:41 +0100

vyatta-dataplane (3.9.112) unstable; urgency=medium

  [ Nicholas Brown ]
  * Add new public API dp_pipeline_is_feature_enabled_by_inst()

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 06 May 2020 09:18:57 +0100

vyatta-dataplane (3.9.111) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * vhost: fix QMP communication (Bugfix: VRVDR-50745)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 22 Apr 2020 16:21:13 +0100

vyatta-dataplane (3.9.110) unstable; urgency=medium

  [ Mark Gillott ]
  * Register event operations only on first use (Fixes: VRVDR-50621)
  * Capture portmonitor replay errors (Fixes: VRVDR-50621)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 21 Apr 2020 07:45:42 +0100

vyatta-dataplane (3.9.109) unstable; urgency=medium

  [ Charles (Chas) Williams ]
  * crypto: count burst buffer full as drops (Bugfix: VRVDR-50279)
  * crypto: count most errors as proto drops (Bugfix: VRVDR-50279)
  * crypto: eliminate macro usage (Bugfix: VRVDR-50279)
  * crypto: count packets against tunnel interface (Bugfix: VRVDR-50279)
  * crypto: do not count failed packets (Bugfix: VRVDR-50279)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 21 Apr 2020 07:43:38 +0100

vyatta-dataplane (3.9.108) unstable; urgency=medium

  [ Gavin Shearer ]
  * alg: ensure parent session active before linking child

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Tue, 21 Apr 2020 07:42:23 +0100

vyatta-dataplane (3.9.107) unstable; urgency=medium

  [ Ian Wilson ]
  * npf: Optimal address-group show output including host addresses

  [ Robert Shearman ]
  * pipeline: use correct ifp for egress vlan modify feature
    (Fixes: VRVDR-50708)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 17 Apr 2020 11:20:45 +0100

vyatta-dataplane (3.9.106) unstable; urgency=medium

  [ Nicholas Brown ]
  * master branch is targeting 2005 release
  * Restore .gitlint file
  * Identify hidden files that should not be ignored

  [ Gavin Shearer ]
  * l3acl: don't commit rules to HW on event IF_FEAT_MODE_EVENT_L3_ENABLED

  [ Ian Wilson ]
  * cgnat: Obsolete some error counts, and add echo-req count to summary

  [ Nicholas Brown ]
  * Remove copyright and license assertion output

  [ Paul Atkins ]
  * ipv4_rsmbl: If we detect duplicate fragments then clean up properly
  * ipv4_rsmbl: check all previous frags to determine duplicates
  * ipv4_rsmbl: drop fragment if it includes previously rx'ed bytes
  * ut: enhance the ipv4 duplicate fragment tests
  * ipv6_rsmbl: If we detect duplicate fragments then clean up properly
  * ipv6_rsmbl: check all previous frags to determine duplicates
  * ipv6_rsmbl: drop fragment if it includes previously rx'ed bytes
  * if: make if_output_features always inline
  * l2_vlan_mod: rename the vlan_mod pipline feature file
  * l2_vlan_mod: add a new pipeline node for egress vlan modify
  * portmonitor: add a new pipeline node for output portmonitor
  * capture: add a new pipeline node for output capture
  * if: split if_output into an internal and external version
  * if: remove if_output_features and call the feat point directly
  * if: make the pipeline call if_output_internal

 -- Paul Atkins <paul.atkins@intl.att.com>  Thu, 16 Apr 2020 12:34:30 +0100

vyatta-dataplane (3.9.105) unstable; urgency=medium

  [ Mark Gillott ]
  * pcap: run FAL updates on master thread (Fixes: VRVDR-50581)

  [ Paul Atkins ]

 -- Paul Atkins <paul.atkins@intl.att.com>  Wed, 08 Apr 2020 07:11:28 +0100

vyatta-dataplane (3.9.104) unstable; urgency=medium

  * DANOS Import master

 -- Nicholas Brown <nick.brown@att.com>  Tue, 07 Apr 2020 13:26:26 +0100

vyatta-dataplane (3.7.86.1.4) unstable; urgency=medium

  * DANOS Import

 -- Paul Atkins <paul.atkins@intl.att.com>  Fri, 08 Nov 2019 16:27:29 +0000
